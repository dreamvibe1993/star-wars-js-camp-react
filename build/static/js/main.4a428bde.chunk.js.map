{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Movies/DeletionConfirmationModal/DeletionConfirmationModal.module.css","components/Movies/MovieItemScreen/MovieItemScreen.module.css","components/Movies/MoviesSidebar/MoviesSidebar.module.css","components/Planets/PlanetsSidebar/PlanetsSidebar.module.css","components/RegistrationPage/RegistrationPage.module.css","imgs/logo.tsx","constants/sizing-constants.ts","models/yup-validation-schemas.ts","api/mappers/mapper.ts","api/firebase.ts","api/services/load-movies-data-api.ts","api/services/load-characters-data-api.ts","api/services/load-planets-data-api.ts","store/redux-slices/characters.ts","store/redux-slices/movies.ts","store/redux-slices/auth.ts","store/redux-slices/planets.ts","components/SearchBar/SearchBar.tsx","api/services/auth.ts","store/redux-slices/components.ts","components/Navbar/Navbar.tsx","components/Movies/MovieItemScreen/MovieItemEditForm/MovieItemEditForm.tsx","components/Movies/DeletionConfirmationModal/DeletionConfirmationModal.tsx","components/Movies/MovieItemScreen/MovieItemDisplayComponent/MovieItemDisplayComponent.tsx","components/Movies/MovieItemScreen/MovieItemScreen.tsx","components/WelcomeScreen/WelcomeScreen.tsx","components/Sidebar/Sidebar.tsx","components/Movies/MoviesSidebar/MoviesSidebar.tsx","components/Characters/CharacterItemScreen/CharacterItemScreen.tsx","components/Characters/CharactersSidebar/CharactersSidebar.tsx","components/Planets/PlanetsItemScreen/PlanetsItemScreen.tsx","components/Planets/PlanetsSidebar/PlanetsSidebar.tsx","components/LoginPage/LoginPage.tsx","components/Movies/CreateMovieItemScreen/CreateMovieItemScreen.tsx","components/NotFoundScreen/NotFoundScreen.tsx","components/RegistrationPage/RegistrationPage.tsx","App.tsx","reportWebVitals.ts","components/ErrorScreen/ErrorScreen.tsx","store/store.ts","index.tsx","components/Movies/CreateMovieItemScreen/CreateMovieItemScreen.module.css","components/Movies/MovieItemScreen/MovieItemEditForm/MovieItemEditForm.module.css"],"names":["module","exports","Logo","color","enableBackground","height","id","version","viewBox","width","x","xmlns","xmlSpace","y","d","fill","YellowLogo","style","transform","DRAWER_WIDTH","createMovieItemYupValScheme","yup","title","required","producer","releaseDate","director","openingCrawl","charactersPKs","planetsPKs","loginPageYupValScheme","email","password","min","accCreateYupValScheme","repeatPassword","movieEditYupValScheme","NavbarSearchYupValScheme","mapMovie","payload","docID","fields","release_date","opening_crawl","created","edited","characters","episodeId","episode_id","planets","speciesPKs","species","starshipsPKs","starships","vehiclesPKs","vehicles","pk","model","docId","img","mapPlanet","climate","diameter","gravity","name","orbitalPeriod","orbital_period","population","rotationPeriod","rotation_period","surfaceWater","surface_water","terrain","mapCharacter","birthYear","birth_year","eyeColor","eye_color","gender","hairColor","hair_color","homeworld","image","mass","skinColor","skin_color","movieDTOMapper","indexNumber","Date","toISOString","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","DBRef","firestore","firebaseApp","getMoviesCollection","collection","searchMovieEntity","where","get","getCompleteCharactersCollection","getChunkOfCharactersCollection","last","threshholdNumber","endAt","limit","getCompletePlanetsCollection","getChunkOfPlanetsCollection","movieSidebarSnapshotTeardown","UserSignInStatus","lazyloadMoreCharacters","createAsyncThunk","a","CharactersDataAPI","querySnapshot","lastDocument","docs","limitedQuerySnapshot","empty","map","character","data","loadCharacterItem","newDocId","doc","exists","characterItem","condition","item","getState","charactersStore","charactersStoreReducer","createSlice","initialState","numberOfItemsDisplayCharacters","itemsToDispCharacters","isCharacterLoadingPending","areCharacterEntitiesLoaded","isSidebarLoading","reducers","setCharacters","state","action","setNumberOfItemsDisplayCharacters","discardCharactersItemsAmmount","addItemsToDisplayCharacters","extraReducers","builder","addCase","pending","rejected","fulfilled","actions","lazyloadMorePlanets","PlanetsDataAPI","planet","loadPlanetItem","planetItem","planetsStore","planetsStoreReducer","numberOfItemsDisplayPlanets","itemsToDispPlanets","isPlanetLoadingPending","arePlanetEntitiesLoaded","setPlanets","setNumberOfItemsDisplayPlanets","discardPlanetsItemsAmmount","addItemsToDisplayPlanets","loadMovieItem","movieDoc","movie","relevantCharacters","relevantPlanets","length","charactersPKsTen","slice","relevantCharactersDocs","planetsPKsTen","relevantPlanetsDocs","loadDataToAddWhenCreating","thunkAPI","charactersDocs","planetsDocs","dispatch","addMovieEntry","MovieDTO","MoviesDataAPI","moviesCollection","moviesCollectionLastIndex","add","editMovieEntry","update","deleteMovieEntry","delete","searchMovieEntry","movieDocs","moviesStoreReducer","movies","movieItem","isMovieLoadingPending","areEntitiesLoading","isEntityBeingAdded","isEntityBeingDeleted","redirectLink","areMovieEntitiesLoaded","isDeletionConfirmationOpen","setMovies","setRelevChars","setRelevPlanets","flushMovieItem","setMovieLoadingPending","setDeletionModalOpen","setDeletionModalClose","subscribeToMovies","onSnapshot","error","console","useStyles","makeStyles","theme","createStyles","searchIcon","padding","spacing","position","pointerEvents","display","alignItems","justifyContent","search","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","breakpoints","up","inputInput","paddingLeft","transition","transitions","create","inputRoot","validationSchema","SearchBar","materialUIStyles","useDispatch","formik","useFormik","initialValues","onSubmit","values","handleSubmit","className","InputBase","classes","root","input","inputProps","onChange","handleChange","placeholder","createUser","auth","createUserWithEmailAndPassword","userSignIn","signInWithEmailAndPassword","authStateReducer","isUserSignedIn","Pending","passwordErrorCodeMsg","emailErrorCodeMsg","userEmail","signUserIn","Authorised","signUserOut","Unauthorised","setPassErrMsg","setEmailErrMsg","setUserEmailString","flushAllErrCodes","signIn","AuthAPI","catch","err","code","message","signCurrentUserOut","signOut","createUserAccount","componentsStateReducer","isCommonLoadingBckDropOn","mode","setCommonBackdropOn","setCommonBackdropOff","setThemingMode","appBar","easing","sharp","duration","leavingScreen","zIndex","drawer","appBarShift","easeOut","enteringScreen","menuButton","marginRight","hide","Navbar","setDrawerState","history","useHistory","useState","value","setValue","location","useLocation","useSelector","moviesStore","useEffect","push","pathname","includes","a11yProps","index","authState","React","toggler","setToggler","themingMode","componentsState","open","useContext","DrawerContext","isMediaQueryMatch375","useMediaQuery","appbarPersistentMode","clsx","appbarPermanentMode","AppBar","Toolbar","IconButton","aria-label","edge","onClick","Tabs","event","newValue","Tab","component","NavLink","label","to","Typography","styles","variant","cancelLinkStyles","Switch","checked","target","Button","margin","down","cancelButton","formControl","minWidth","maxWidth","loseWrap","whiteSpace","spinnerContainer","minHeight","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","MovieItemEditForm","characterNames","setCharacterNames","planetsNames","setPlanetsNames","charsCollection","planetsCollection","newRelevantCharacters","setNewRelevantCharacters","newRelevantPlanets","setNewRelevantPlanets","replace","movieDTO","goBack","names","char","filter","find","charactersPersonalKeys","setFieldValue","planetsPersonalKeys","TableContainer","Paper","Table","size","TableBody","TableRow","TableCell","align","tenthWidth","TextField","touched","Boolean","errors","helperText","fullWidth","type","multiline","FormControl","InputLabel","Select","Input","labelId","renderValue","selected","join","multiple","MenuItem","Checkbox","ListItemText","primary","buttonContainer","paper","background","border","boxShadow","shadows","DeletionConfirmationModal","movieID","Modal","aria-describedby","aria-labelledby","BackdropComponent","Backdrop","BackdropProps","timeout","modal","onClose","closeAfterTransition","Fade","in","buttons","deleteButton","tableContainer","flexDirection","imgContainer","backgroundPosition","backgroundSize","card","buttonTableCell","borderBottom","MovieItemDisplayComponent","relevantEntitiesBlock","Card","CardActionArea","CardMedia","table","grid","flexGrow","gridItem","media","jsxAccorderons","marginTop","MovieItemScreen","queryParam","useParams","edit","URLSearchParams","CircularProgress","relevantCharactersJSX","Accordion","AccordionSummary","aria-controls","expandIcon","gutterBottom","AccordionDetails","Grid","container","charID","xs","CardContent","CardActions","relevantPlanetsJSX","planetID","WelcomeScreen","setOpen","href","flexShrink","drawerHeader","mixins","toolbar","drawerPaper","activeLink","Sidebar","children","useTheme","Drawer","direction","Divider","List","ListItem","activeClassName","button","ListItemIcon","MoviesSidebar","queryParams","listItems","createEntryButton","divider","drawerContainer","CharacterItemScreen","backdrop","overflow","CharactersSidebar","numberOfItemsToDisplay","useMemo","ammount","Math","ceil","window","innerHeight","getAmountOfItemsPerWindowSize","addEventListener","scrollRef","useRef","current","divListContainer","scrollHeight","scrollTop","clientHeight","ref","PlanetsItemScreen","PlanetsSidebar","content","contentShift","flexColumn","modalAlike","LoginPage","isUserAuthorized","passwordErrorMessage","emailErrorMessage","setFieldError","Container","getStyles","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","CreateMovieItemScreen","planetNames","setPlanetNames","chips","Chip","chip","link","NotFoundScreen","RegistrationPage","defaultDrawerContext","createContext","App","isCommonLoadingBackDropOn","drawerContextValue","setDrawerContext","changeDrawerState","isOpen","getSignInStatus","createMuiTheme","light","main","dark","contrastText","secondary","areMoviesLoaded","areCharactersLoaded","arePlanetsLoaded","addresses","checkStatus","isCanShowMobileSidebar","setMobileSidebarStatus","ThemeProvider","CssBaseline","Provider","Fragment","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ErrorScreen","reducer","combineReducers","store","configureStore","sidebar","toggleOpen","this","toggleClose","onAuthStateChanged","user","isDrawerOpen","ReactDOM","render","FallbackComponent","resetErrorBoundary","document","getElementById"],"mappings":"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","file":"static/js/main.4a428bde.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Navbar_title__cG9xP\",\"cancelLinkStyles\":\"Navbar_cancelLinkStyles__3hvJn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"DeletionConfirmationModal_modal__1hKkd\",\"buttons\":\"DeletionConfirmationModal_buttons__jO-rV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"MovieItemScreen_buttonContainer__Zt7De\",\"table\":\"MovieItemScreen_table__3I0W6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"drawer-container\":\"MoviesSidebar_drawer-container__2R6rK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"drawerContainer\":\"PlanetsSidebar_drawerContainer__306yC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"thirdWidth\":\"RegistrationPage_thirdWidth__2djDY\",\"flexColumn\":\"RegistrationPage_flexColumn__2KKxQ\",\"fullWidth\":\"RegistrationPage_fullWidth__1kbQD\"};","/* eslint-disable react/no-unknown-property */\r\nimport React from 'react'\r\n\r\ninterface LogoTopProps {\r\n    color: string;\r\n}\r\n/**\r\n * Navbar's SW logo.\r\n * @param param0 Color of the logo.\r\n * @returns SVG.\r\n */\r\nexport const Logo = ({ color }: LogoTopProps): JSX.Element => (\r\n    <svg enableBackground=\"new 0 0 693.615 419.375\" height=\"50px\" id=\"Layer_1\" version=\"1.0\" viewBox=\"0 0 693.615 419.375\" width=\"100px\"\r\n        x=\"0px\" xmlns=\"http://www.w3.org/2000/svg\" xmlSpace=\"preserve\"\r\n        y=\"0px\">\r\n        <g id=\"Layer_3\" />\r\n        <g id=\"Layer_2\">\r\n            <g>\r\n                <path d=\"M148.718,221.207l8.67,25.461c4.691,13.768,8.879,24.779,9.425,24.779c0.009,0,0.017-0.004,0.024-0.01\r\n       c0.6-0.53,17.57-49.811,17.57-49.811h32.89l-39.68,115.619h-22.86c0,0-24.4-70.471-24.3-70.739l-25.47,69.851h-22.63\r\n       l-39.18-115.15l32.73,0.021c0,0,17.929,50.821,18.168,50.821c0.001,0,0.001-0.001,0.002-0.002l17.89-50.841H148.718 M32.003,213.2\r\n       l3.601,10.584l39.18,115.149l1.845,5.424h5.729h22.63h5.598l1.918-5.26l17.685-48.5c1.524,4.434,3.171,9.213,4.818,13.988\r\n       c6.089,17.655,12.191,35.277,12.191,35.277l1.864,5.383h5.696h22.86h5.712l1.854-5.403l39.68-115.618l3.637-10.598h-11.204h-32.89\r\n       h-5.706l-1.858,5.396c-2.974,8.635-6.921,20.031-10.296,29.676c-0.509-1.463-1.039-3.001-1.587-4.611l-8.669-25.46l-1.846-5.421\r\n       h-5.727h-36.75h-5.666l-1.881,5.345l-10.453,29.706c-3.453-9.706-7.456-21.017-10.516-29.691l-1.882-5.334l-5.657-0.004\r\n       l-32.73-0.021L32.003,213.2L32.003,213.2z\" fill={color}/>\r\n            </g>\r\n            <g>\r\n                <path d=\"M655.258,220.758l-0.075,30.305c0,0-32.643-0.109-49.239-0.109c-5.521,0-9.266,0.013-9.444,0.045\r\n       c-2.86,0.521-4.681,6.602-3.87,9.271c0.399,1.35,3.391,5.76,6.63,9.81c3.229,4.051,8.54,10.681,11.78,14.729\r\n       c8.319,10.381,9.46,12.43,10.229,18.391c1.25,9.681-3.329,20.16-11.829,27.07c-8.518,6.93-8.145,6.979-71.383,6.979\r\n       c-0.916,0-1.835,0-2.777,0c-38.46-0.01-58.8-0.329-61.761-0.989c-5.26-1.19-13.64-8.03-35.79-29.28\r\n       c-7.967-7.636-15.309-14.322-15.686-14.324c-0.01,0-0.015,0.006-0.015,0.016l-0.261,44.579l-35.899-0.159l-0.221-114.98h45.271\r\n       h34.79c24.13,0.871,40.46,24.91,37.21,40.24c-0.74,3.479-2.62,8.521-4.181,11.2c-3.21,5.5-11.38,12.56-18.011,15.591\r\n       c-2.449,1.108-4.449,2.398-4.449,2.858c0,1.71,8.061,9.649,11.08,10.91c2.579,1.079,10.09,1.319,43.21,1.319\r\n       c3.882,0,7.408,0.002,10.608,0.002c33.293,0,31.618-0.24,34.19-5.741c1.801-3.83,0.431-6.12-12.239-20.39\r\n       c-16.051-15.971-14.37-23.621-14.48-29.271c-0.229-6.77,5.102-28.069,32.812-28.069L655.258,220.758 M440.188,273.878\r\n       c15.37,0,18.49-0.239,21.761-1.66c11.04-4.8,11.63-18.979,1.04-25.271c-2.319-1.381-5.3-1.609-21.96-1.7l-19.279-0.101\r\n       c0.159,0.15-0.061,27.57-0.061,27.57S426.518,273.878,440.188,273.878 M663.277,212.758h-8.021h-73.8\r\n       c-16.032,0-25.515,6.328-30.646,11.637c-8.347,8.633-10.313,19.504-10.162,24.629c0.008,0.427,0.003,0.865-0.002,1.322\r\n       c-0.073,8.329,1.154,17.758,16.659,33.246c3.065,3.452,8.193,9.239,10.131,12.115c-4.238,0.521-14.98,0.521-26.262,0.521h-4.792\r\n       l-5.816-0.002c-19.904,0-36.688-0.057-40.128-0.736c-0.481-0.314-1.156-0.854-1.898-1.498c6.877-4.235,13.83-10.799,17.104-16.412\r\n       c1.987-3.413,4.178-9.243,5.098-13.568c2.04-9.625-1.325-21.236-9.001-31.068c-8.956-11.471-21.985-18.334-35.746-18.83\r\n       l-0.145-0.006h-0.145h-34.79h-45.271h-8.016l0.016,8.017l0.221,114.979l0.016,7.949l7.949,0.035l35.899,0.159l7.988,0.035\r\n       l0.047-7.988l0.155-26.706c0.733,0.696,1.491,1.419,2.269,2.165c24.227,23.24,32.359,29.679,39.562,31.308\r\n       c1.979,0.441,5.253,1.172,63.523,1.188h2.779c31.546,0,47.38,0,56.799-0.91c10.789-1.043,14.259-3.49,19.461-7.725l0.173-0.141\r\n       c10.685-8.687,16.323-21.83,14.715-34.3c-1.048-8.11-3.194-11.479-11.922-22.368l-2.594-3.24\r\n       c-3.04-3.799-6.713-8.387-9.175-11.475c-1.986-2.484-3.546-4.689-4.487-6.133c1.236-0.003,2.841-0.005,4.918-0.005\r\n       c16.395,0,48.887,0.108,49.213,0.11l8.008,0.026l0.02-8.008l0.075-30.306L663.277,212.758L663.277,212.758z M429.739,265.586\r\n       c0.013-2.021,0.025-4.287,0.038-6.557c0.01-2,0.019-4.004,0.022-5.84l11.187,0.058c6.429,0.035,16.103,0.088,17.989,0.623\r\n       c2.407,1.461,3.75,3.72,3.604,6.06c-0.08,1.264-0.682,3.588-3.821,4.951c-1.75,0.76-4.54,0.997-18.57,0.997\r\n       C435.738,265.878,432.305,265.749,429.739,265.586L429.739,265.586z\" fill={color}/>\r\n            </g>\r\n            <g>\r\n                <path d=\"M312.908,220.287l40.29,115.92l-32.83,0.15l-5.45-17.41l-58.7-0.471l-5.18,17.431l-32.5-0.341\r\n       l39.78-115.229L312.908,220.287 M286.507,237.283c-0.083,0.333-5.144,14.219-10.222,28.104c-5.12,14-10.257,28-10.328,28.109\r\n       c0,0.001-0.001,0.001,0,0.001l0,0c0,0,0,0,0-0.001c0.136-0.04,18.316-0.08,29.968-0.08c5.453,0,9.475,0.009,9.55,0.029\r\n       c0.001,0.004,0.001,0.005,0.001,0.005s0-0.001,0-0.003c0,0,0,0-0.001-0.002C305.271,292.916,286.566,237.959,286.507,237.283\r\n       c0.001-0.004,0.001-0.006,0.001-0.006l0,0C286.507,237.277,286.507,237.279,286.507,237.283 M318.595,212.282l-5.693,0.005\r\n       l-54.59,0.051l-5.696,0.005l-1.859,5.386l-39.78,115.229l-3.623,10.494l11.102,0.115l32.5,0.341l6.033,0.063l1.719-5.782\r\n       l3.466-11.662l46.854,0.375l3.708,11.848l1.765,5.638l5.907-0.026l32.829-0.15l11.195-0.052l-3.676-10.574l-40.29-115.92\r\n       L318.595,212.282L318.595,212.282z M277.472,285.424c1.515-4.129,3.556-9.71,6.327-17.289c0.869-2.376,1.664-4.551,2.393-6.545\r\n       c0.663,1.956,1.385,4.084,2.169,6.398c0.646,1.906,3.485,10.27,5.92,17.428C287.041,285.416,281.591,285.417,277.472,285.424\r\n       L277.472,285.424z\" fill={color}/>\r\n            </g>\r\n            <g>\r\n                <path d=\"M326.488,81.928v28.6h-57.28v87.47h-34.15v-87.54l-66.86,0.19c-8.06,0-9.14,6.42-9.14,8.88\r\n       c0,3.02,1.97,6.04,12.79,19.74c7.02,8.9,13.47,17.78,14.32,19.72c4.64,10.68-1.36,27.32-12.29,34.08\r\n       c-7.79,4.813-6.459,4.931-64.308,4.931c-2.974,0-6.096,0-9.392,0h-62.27v-32.13h97.9l2.89-2.01c1.95-1.36,3.08-3.23,3.51-5.79\r\n       c0.6-3.68,0.29-4.16-11.8-17.78c-14.29-16.1-15.8-19.04-15.06-29.32c0.84-11.73,11.3-28.77,29.58-28.77L326.488,81.928\r\n        M334.488,73.916l-8.013,0.012l-181.56,0.27c-10.458,0-20.171,4.518-27.342,12.722c-5.814,6.652-9.63,15.429-10.206,23.477\r\n       c-0.973,13.511,2.137,18.393,17.056,35.202c4.33,4.877,8.447,9.516,9.821,11.486c-0.022,0.079-0.042,0.13-0.054,0.159\r\n       c-0.015,0.012-0.038,0.03-0.07,0.052l-0.822,0.572H37.908h-8v8v32.13v8h8h62.27h4.937h4.455c28.522,0,42.6-0.027,50.894-0.635\r\n       c9.49-0.695,12.518-2.323,17.054-5.14l0.566-0.351c14.262-8.821,21.612-29.827,15.422-44.074\r\n       c-1.91-4.358-14.003-19.746-15.376-21.486c-3.796-4.807-10.062-12.74-11.054-15.036c0.024-0.193,0.071-0.393,0.121-0.532\r\n       c0.165-0.042,0.481-0.098,1.001-0.098l58.86-0.167v79.517v8h8h34.15h8v-8v-79.47h49.28h8v-8v-28.6V73.916L334.488,73.916z\" fill={color}/>\r\n            </g>\r\n            <g>\r\n                <path d=\"M419.548,82.857l40.18,116.22l-32.77-0.18l-5.32-17.41l-58.439-0.26l-5.221,16.77h-33.369l39.739-115.14\r\n       H419.548 M372.737,156.478l39.801-0.05c0.001,0,0.001,0.001,0.001,0.001c0.136,0-19.342-57.201-19.472-57.241l0,0\r\n       C392.925,99.183,372.288,156.478,372.737,156.478 M425.247,74.857h-5.699h-55.2h-5.701l-1.86,5.39l-39.74,115.141l-3.662,10.61\r\n       h11.225h33.37h5.889l1.75-5.623l3.461-11.121l46.632,0.207l3.599,11.774l1.721,5.629l5.887,0.033l32.77,0.18l11.297,0.062\r\n       l-3.691-10.676l-40.18-116.22L425.247,74.857L425.247,74.857z M383.851,148.464c2.468-7.027,5.904-16.657,9.014-25.312\r\n       c2.948,8.644,6.209,18.245,8.588,25.29L383.851,148.464L383.851,148.464z\" fill={color}/>\r\n            </g>\r\n            <g>\r\n                <path d=\"M532.396,82.857c25.921,0,43.91,0.37,47.37,0.97c8,1.39,15.23,5.66,20.65,12.22\r\n       c5.67,6.86,6.97,10.14,7.71,19.54c1.061,13.27-5.25,24.72-17.7,32.15c-3.63,2.17-7.359,4.28-8.29,4.7\r\n       c-1.43,0.65-1.239,1.27,1.32,4.27c1.649,1.93,4.51,4.68,6.35,6.11l3.36,2.61l62.08,0.89l0.609,31.68h-38.061\r\n       c-29.439,0-38.86-0.27-41.62-1.2c-4.13-1.4-14.069-9.82-34.271-29.04l-14.42-13.72l0.152,43.96h-37.043V82.857H532.396\r\n        M526.938,134.627h19.671c19.141,0,19.739-0.06,22.47-2.11c4.881-3.66,6.609-7.43,6.091-13.22c-0.53-5.97-2.83-9.08-8.601-11.58\r\n       c-3.25-1.42-6.381-1.65-21.721-1.65h-17.91V134.627 M532.396,74.857h-41.8h-8v8v115.14v8h8h37.043h8.028l-0.028-8.028\r\n       l-0.088-25.216l0.84,0.799c24.986,23.773,32.356,29.173,37.218,30.821c3.733,1.259,9.982,1.624,44.188,1.624h38.061h8.154\r\n       l-0.156-8.154l-0.609-31.68l-0.148-7.734l-7.734-0.111l-59.402-0.851l-1.245-0.967c-0.396-0.309-0.876-0.717-1.389-1.179\r\n       c0.446-0.264,0.854-0.507,1.207-0.717c15.003-8.953,22.866-23.407,21.569-39.653c-0.863-10.959-2.82-15.896-9.52-24\r\n       c-6.584-7.969-15.621-13.298-25.447-15.005C575.678,74.999,548.257,74.857,532.396,74.857L532.396,74.857z M534.938,114.067h9.91\r\n       c14.027,0,16.806,0.233,18.518,0.981c3.25,1.408,3.58,2.091,3.835,4.957c0.256,2.848-0.097,3.994-2.922,6.112\r\n       c-0.093,0.069-0.164,0.123-0.223,0.166c-1.865,0.345-8.786,0.345-17.447,0.345h-11.67L534.938,114.067L534.938,114.067z\" fill={color}/>\r\n            </g>\r\n        </g>\r\n    </svg>\r\n)\r\n\r\ninterface LogoWelcomeProps {\r\n    width: string;\r\n    height: string;\r\n}\r\n/**\r\n * Navbar's welcome screen logo.\r\n * @param param0 Its width and height.\r\n * @returns SVG.\r\n */\r\nexport const YellowLogo = ({ width, height }: LogoWelcomeProps): JSX.Element => (\r\n        <svg enableBackground=\"new 0 0 693.615 419.375\"\r\n            height=\"271.366\"\r\n            id=\"Layer_1\"\r\n            style={{ width, height }}\r\n            version=\"1.0\"\r\n            viewBox=\"0 0 634.10401 271.366\"\r\n            width=\"634.104\"\r\n            x=\"0px\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            y=\"0px\"><defs\r\n                id=\"defs33\" />        <g\r\n                    id=\"Layer_2\"\r\n                    transform=\"translate(-29.908,-73.916003)\">\r\n                <g\r\n                    id=\"g7\">\r\n                    <path\r\n                        d=\"m 148.718,221.207 8.67,25.461 c 4.691,13.768 8.879,24.779 9.425,24.779 0.009,0 0.017,-0.004 0.024,-0.01 0.6,-0.53 17.57,-49.811 17.57,-49.811 h 32.89 l -39.68,115.619 h -22.86 c 0,0 -24.4,-70.471 -24.3,-70.739 l -25.47,69.851 h -22.63 l -39.18,-115.15 32.73,0.021 c 0,0 17.929,50.821 18.168,50.821 10e-4,0 10e-4,-10e-4 0.002,-0.002 l 17.89,-50.841 h 36.751 M 32.003,213.2 l 3.601,10.584 39.18,115.149 1.845,5.424 h 5.729 22.63 5.598 l 1.918,-5.26 17.685,-48.5 c 1.524,4.434 3.171,9.213 4.818,13.988 6.089,17.655 12.191,35.277 12.191,35.277 l 1.864,5.383 h 5.696 22.86 5.712 l 1.854,-5.403 39.68,-115.618 3.637,-10.598 h -11.204 -32.89 -5.706 l -1.858,5.396 c -2.974,8.635 -6.921,20.031 -10.296,29.676 -0.509,-1.463 -1.039,-3.001 -1.587,-4.611 l -8.669,-25.46 -1.846,-5.421 h -5.727 -36.75 -5.666 l -1.881,5.345 -10.453,29.706 C 90.515,238.551 86.512,227.24 83.452,218.566 l -1.882,-5.334 -5.657,-0.004 -32.73,-0.021 -11.18,-0.007 0,0 z\"\r\n                        id=\"path9\"\r\n\r\n                    />\r\n                </g>\r\n                <g\r\n                    id=\"g11\">\r\n                    <path\r\n                        d=\"m 655.258,220.758 -0.075,30.305 c 0,0 -32.643,-0.109 -49.239,-0.109 -5.521,0 -9.266,0.013 -9.444,0.045 -2.86,0.521 -4.681,6.602 -3.87,9.271 0.399,1.35 3.391,5.76 6.63,9.81 3.229,4.051 8.54,10.681 11.78,14.729 8.319,10.381 9.46,12.43 10.229,18.391 1.25,9.681 -3.329,20.16 -11.829,27.07 -8.518,6.93 -8.145,6.979 -71.383,6.979 -0.916,0 -1.835,0 -2.777,0 -38.46,-0.01 -58.8,-0.329 -61.761,-0.989 -5.26,-1.19 -13.64,-8.03 -35.79,-29.28 -7.967,-7.636 -15.309,-14.322 -15.686,-14.324 -0.01,0 -0.015,0.006 -0.015,0.016 l -0.261,44.579 -35.899,-0.159 -0.221,-114.98 h 45.271 34.79 c 24.13,0.871 40.46,24.91 37.21,40.24 -0.74,3.479 -2.62,8.521 -4.181,11.2 -3.21,5.5 -11.38,12.56 -18.011,15.591 -2.449,1.108 -4.449,2.398 -4.449,2.858 0,1.71 8.061,9.649 11.08,10.91 2.579,1.079 10.09,1.319 43.21,1.319 3.882,0 7.408,0.002 10.608,0.002 33.293,0 31.618,-0.24 34.19,-5.741 1.801,-3.83 0.431,-6.12 -12.239,-20.39 -16.051,-15.971 -14.37,-23.621 -14.48,-29.271 -0.229,-6.77 5.102,-28.069 32.812,-28.069 l 73.8,-0.003 m -215.07,53.12 c 15.37,0 18.49,-0.239 21.761,-1.66 11.04,-4.8 11.63,-18.979 1.04,-25.271 -2.319,-1.381 -5.3,-1.609 -21.96,-1.7 l -19.279,-0.101 c 0.159,0.15 -0.061,27.57 -0.061,27.57 0,0 4.829,1.162 18.499,1.162 m 223.089,-61.12 h -8.021 -73.8 c -16.032,0 -25.515,6.328 -30.646,11.637 -8.347,8.633 -10.313,19.504 -10.162,24.629 0.008,0.427 0.003,0.865 -0.002,1.322 -0.073,8.329 1.154,17.758 16.659,33.246 3.065,3.452 8.193,9.239 10.131,12.115 -4.238,0.521 -14.98,0.521 -26.262,0.521 h -4.792 l -5.816,-0.002 c -19.904,0 -36.688,-0.057 -40.128,-0.736 -0.481,-0.314 -1.156,-0.854 -1.898,-1.498 6.877,-4.235 13.83,-10.799 17.104,-16.412 1.987,-3.413 4.178,-9.243 5.098,-13.568 2.04,-9.625 -1.325,-21.236 -9.001,-31.068 -8.956,-11.471 -21.985,-18.334 -35.746,-18.83 l -0.145,-0.006 h -0.145 -34.79 -45.271 -8.016 l 0.016,8.017 0.221,114.979 0.016,7.949 7.949,0.035 35.899,0.159 7.988,0.035 0.047,-7.988 0.155,-26.706 c 0.733,0.696 1.491,1.419 2.269,2.165 24.227,23.24 32.359,29.679 39.562,31.308 1.979,0.441 5.253,1.172 63.523,1.188 h 2.779 c 31.546,0 47.38,0 56.799,-0.91 10.789,-1.043 14.259,-3.49 19.461,-7.725 l 0.173,-0.141 c 10.685,-8.687 16.323,-21.83 14.715,-34.3 -1.048,-8.11 -3.194,-11.479 -11.922,-22.368 l -2.594,-3.24 c -3.04,-3.799 -6.713,-8.387 -9.175,-11.475 -1.986,-2.484 -3.546,-4.689 -4.487,-6.133 1.236,-0.003 2.841,-0.005 4.918,-0.005 16.395,0 48.887,0.108 49.213,0.11 l 8.008,0.026 0.02,-8.008 0.075,-30.306 0.021,-8.016 0,0 z m -233.538,52.828 c 0.013,-2.021 0.025,-4.287 0.038,-6.557 0.01,-2 0.019,-4.004 0.022,-5.84 l 11.187,0.058 c 6.429,0.035 16.103,0.088 17.989,0.623 2.407,1.461 3.75,3.72 3.604,6.06 -0.08,1.264 -0.682,3.588 -3.821,4.951 -1.75,0.76 -4.54,0.997 -18.57,0.997 -4.45,0 -7.883,-0.129 -10.449,-0.292 l 0,0 z\"\r\n                        id=\"path13\"\r\n\r\n                    />\r\n                </g>\r\n                <g\r\n                    id=\"g15\">\r\n                    <path\r\n                        d=\"m 312.908,220.287 40.29,115.92 -32.83,0.15 -5.45,-17.41 -58.7,-0.471 -5.18,17.431 -32.5,-0.341 39.78,-115.229 54.59,-0.05 m -26.401,16.996 c -0.083,0.333 -5.144,14.219 -10.222,28.104 -5.12,14 -10.257,28 -10.328,28.109 0,0.001 -10e-4,0.001 0,0.001 l 0,0 c 0,0 0,0 0,-0.001 0.136,-0.04 18.316,-0.08 29.968,-0.08 5.453,0 9.475,0.009 9.55,0.029 10e-4,0.004 10e-4,0.005 10e-4,0.005 0,0 0,-10e-4 0,-0.003 0,0 0,0 -10e-4,-0.002 -0.204,-0.529 -18.909,-55.486 -18.968,-56.162 10e-4,-0.004 10e-4,-0.006 10e-4,-0.006 l 0,0 c -10e-4,0 -10e-4,0.002 -10e-4,0.006 m 32.088,-25.001 -5.693,0.005 -54.59,0.051 -5.696,0.005 -1.859,5.386 -39.78,115.229 -3.623,10.494 11.102,0.115 32.5,0.341 6.033,0.063 1.719,-5.782 3.466,-11.662 46.854,0.375 3.708,11.848 1.765,5.638 5.907,-0.026 32.829,-0.15 11.195,-0.052 -3.676,-10.574 -40.29,-115.92 -1.871,-5.384 0,0 z m -41.123,73.142 c 1.515,-4.129 3.556,-9.71 6.327,-17.289 0.869,-2.376 1.664,-4.551 2.393,-6.545 0.663,1.956 1.385,4.084 2.169,6.398 0.646,1.906 3.485,10.27 5.92,17.428 -7.24,0 -12.69,10e-4 -16.809,0.008 l 0,0 z\"\r\n                        id=\"path17\"\r\n\r\n                    />\r\n                </g>\r\n                <g\r\n                    id=\"g19\">\r\n                    <path\r\n                        d=\"m 326.488,81.928 v 28.6 h -57.28 v 87.47 h -34.15 v -87.54 l -66.86,0.19 c -8.06,0 -9.14,6.42 -9.14,8.88 0,3.02 1.97,6.04 12.79,19.74 7.02,8.9 13.47,17.78 14.32,19.72 4.64,10.68 -1.36,27.32 -12.29,34.08 -7.79,4.813 -6.459,4.931 -64.308,4.931 -2.974,0 -6.096,0 -9.392,0 h -62.27 v -32.13 h 97.9 l 2.89,-2.01 c 1.95,-1.36 3.08,-3.23 3.51,-5.79 0.6,-3.68 0.29,-4.16 -11.8,-17.78 -14.29,-16.1 -15.8,-19.04 -15.06,-29.32 0.84,-11.73 11.3,-28.77 29.58,-28.77 l 181.56,-0.271 m 8,-8.012 -8.013,0.012 -181.56,0.27 c -10.458,0 -20.171,4.518 -27.342,12.722 -5.814,6.652 -9.63,15.429 -10.206,23.477 -0.973,13.511 2.137,18.393 17.056,35.202 4.33,4.877 8.447,9.516 9.821,11.486 -0.022,0.079 -0.042,0.13 -0.054,0.159 -0.015,0.012 -0.038,0.03 -0.07,0.052 l -0.822,0.572 h -95.39 -8 v 8 32.13 8 h 8 62.27 4.937 4.455 c 28.522,0 42.6,-0.027 50.894,-0.635 9.49,-0.695 12.518,-2.323 17.054,-5.14 l 0.566,-0.351 c 14.262,-8.821 21.612,-29.827 15.422,-44.074 -1.91,-4.358 -14.003,-19.746 -15.376,-21.486 -3.796,-4.807 -10.062,-12.74 -11.054,-15.036 0.024,-0.193 0.071,-0.393 0.121,-0.532 0.165,-0.042 0.481,-0.098 1.001,-0.098 l 58.86,-0.167 v 79.517 8 h 8 34.15 8 v -8 -79.47 h 49.28 8 v -8 -28.6 -8.01 l 0,0 z\"\r\n                        id=\"path21\"\r\n\r\n                    />\r\n                </g>\r\n                <g\r\n                    id=\"g23\">\r\n                    <path\r\n                        d=\"m 419.548,82.857 40.18,116.22 -32.77,-0.18 -5.32,-17.41 -58.439,-0.26 -5.221,16.77 h -33.369 l 39.739,-115.14 h 55.2 m -46.811,73.621 39.801,-0.05 c 10e-4,0 10e-4,0.001 10e-4,0.001 0.136,0 -19.342,-57.201 -19.472,-57.241 l 0,0 c -0.142,-0.005 -20.779,57.29 -20.33,57.29 m 52.51,-81.621 h -5.699 -55.2 -5.701 l -1.86,5.39 -39.74,115.141 -3.662,10.61 h 11.225 33.37 5.889 l 1.75,-5.623 3.461,-11.121 46.632,0.207 3.599,11.774 1.721,5.629 5.887,0.033 32.77,0.18 11.297,0.062 -3.691,-10.676 -40.18,-116.22 -1.868,-5.386 0,0 z m -41.396,73.607 c 2.468,-7.027 5.904,-16.657 9.014,-25.312 2.948,8.644 6.209,18.245 8.588,25.29 l -17.602,0.022 0,0 z\"\r\n                        id=\"path25\"\r\n\r\n                    />\r\n                </g>\r\n                <g\r\n                    id=\"g27\">\r\n                    <path\r\n                        d=\"m 532.396,82.857 c 25.921,0 43.91,0.37 47.37,0.97 8,1.39 15.23,5.66 20.65,12.22 5.67,6.86 6.97,10.14 7.71,19.54 1.061,13.27 -5.25,24.72 -17.7,32.15 -3.63,2.17 -7.359,4.28 -8.29,4.7 -1.43,0.65 -1.239,1.27 1.32,4.27 1.649,1.93 4.51,4.68 6.35,6.11 l 3.36,2.61 62.08,0.89 0.609,31.68 h -38.061 c -29.439,0 -38.86,-0.27 -41.62,-1.2 -4.13,-1.4 -14.069,-9.82 -34.271,-29.04 l -14.42,-13.72 0.152,43.96 H 490.592 V 82.857 h 41.804 m -5.458,51.77 h 19.671 c 19.141,0 19.739,-0.06 22.47,-2.11 4.881,-3.66 6.609,-7.43 6.091,-13.22 -0.53,-5.97 -2.83,-9.08 -8.601,-11.58 -3.25,-1.42 -6.381,-1.65 -21.721,-1.65 h -17.91 v 28.56 m 5.458,-59.77 h -41.8 -8 v 8 115.14 8 h 8 37.043 8.028 l -0.028,-8.028 -0.088,-25.216 0.84,0.799 c 24.986,23.773 32.356,29.173 37.218,30.821 3.733,1.259 9.982,1.624 44.188,1.624 h 38.061 8.154 l -0.156,-8.154 -0.609,-31.68 -0.148,-7.734 -7.734,-0.111 -59.402,-0.851 -1.245,-0.967 c -0.396,-0.309 -0.876,-0.717 -1.389,-1.179 0.446,-0.264 0.854,-0.507 1.207,-0.717 15.003,-8.953 22.866,-23.407 21.569,-39.653 -0.863,-10.959 -2.82,-15.896 -9.52,-24 -6.584,-7.969 -15.621,-13.298 -25.447,-15.005 -5.46,-0.947 -32.881,-1.089 -48.742,-1.089 l 0,0 z m 2.542,39.21 h 9.91 c 14.027,0 16.806,0.233 18.518,0.981 3.25,1.408 3.58,2.091 3.835,4.957 0.256,2.848 -0.097,3.994 -2.922,6.112 -0.093,0.069 -0.164,0.123 -0.223,0.166 -1.865,0.345 -8.786,0.345 -17.447,0.345 h -11.67 l -10e-4,-12.561 0,0 z\"\r\n                        id=\"path29\"\r\n\r\n                    />\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    )","/** PX height of the top navbar */\nexport const NAVBAR_HEIGHT = 64;\n/** Padding of chips chosen in create movie screen */\nexport const ITEM_PADDING_TOP = 8;\n/** PX height of one of people items in the sidebar */\nexport const ITEM_HEIGHT = 48;\n/** Sidebar with in px */\nexport const DRAWER_WIDTH = 240;\n","import * as yup from 'yup';\r\n\r\n/** Yup validation scheme of create-movie-form in the according component */\r\nexport const createMovieItemYupValScheme = yup.object({\r\n    title: yup\r\n        .string()\r\n        .required('Title is required'),\r\n    producer: yup\r\n        .string()\r\n        .required('Type the producer\\'s name'),\r\n    releaseDate: yup\r\n        .string()\r\n        .required('Release date is required!'),\r\n    director: yup\r\n        .string()\r\n        .required('Type the director\\'s name'),\r\n    openingCrawl: yup\r\n        .string()\r\n        .required('Where is the opening crawl?'),\r\n    charactersPKs: yup\r\n        .array()\r\n        .required('Choose chars'),\r\n    planetsPKs: yup\r\n        .array()\r\n        .required('Choose planets'),\r\n});\r\n\r\n/** Yup validation scheme of login page form */\r\nexport const loginPageYupValScheme = yup.object({\r\n    email: yup\r\n        .string()\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    password: yup\r\n        .string()\r\n        .min(6, 'Password should be of minimum 6 characters length')\r\n        .required('Password is required'),\r\n});\r\n\r\n/** Yup validation scheme of create an account form */\r\nexport const accCreateYupValScheme = yup.object({\r\n    email: yup\r\n        .string()\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    password: yup\r\n        .string()\r\n        .min(6, 'Password should be of minimum 6 characters length')\r\n        .required('Password is required'),\r\n    repeatPassword: yup\r\n        .string()\r\n        .min(6, 'Password should be of minimum 6 characters length')\r\n        .required('Please repeat your password'),\r\n});\r\n\r\n/** Yup validation scheme of edit movie form */\r\nexport const movieEditYupValScheme = yup.object({\r\n    title: yup\r\n        .string()\r\n        .required('Title is required'),\r\n    producer: yup\r\n        .string()\r\n        .required('Type the producer\\'s name'),\r\n    releaseDate: yup\r\n        .string()\r\n        .required('Release date is required!'),\r\n    director: yup\r\n        .string()\r\n        .required('Type the director\\'s name'),\r\n    openingCrawl: yup\r\n        .string()\r\n        .required('Where is the opening crawl?'),\r\n});\r\n\r\n/** Yup validation scheme of navbar's searchbar */\r\nexport const NavbarSearchYupValScheme = yup.object({\r\n    title: yup\r\n        .string()\r\n        .required('Title is required')\r\n});","import { Movie } from '../../models/movie';\r\nimport { Character } from '../../models/character';\r\nimport { Planet } from '../../models/planet';\r\nimport { MoviesDTO } from '../dtos/MovieDTO';\r\nimport { CharacterDTO } from '../dtos/CharacterDTO';\r\nimport { PlanetDTO } from '../dtos/PlanetDTO';\r\n\r\n/**\r\n * Returns a movie entry to display.\r\n * @param payload Data to map from DB\r\n * @param docID Document ID of the collection\r\n */\r\nexport const mapMovie = (payload: MoviesDTO, docID: string): Movie => ({\r\n  title: payload.fields.title,\r\n  producer: payload.fields.producer,\r\n  releaseDate: payload.fields.release_date,\r\n  director: payload.fields.director,\r\n  openingCrawl: payload.fields.opening_crawl,\r\n  created: payload.fields.created,\r\n  edited: payload.fields.edited,\r\n  charactersPKs: payload.fields.characters,\r\n  episodeId: payload.fields.episode_id,\r\n  planetsPKs: payload.fields.planets,\r\n  speciesPKs: payload.fields.species,\r\n  starshipsPKs: payload.fields.starships,\r\n  vehiclesPKs: payload.fields.vehicles,\r\n  pk: payload.pk,\r\n  model: payload.model,\r\n  docId: docID,\r\n  img: payload.img ?? null\r\n} as Movie);\r\n\r\n/**\r\n * Returns a planet entry to display.\r\n * @param payload Data to map from DB\r\n * @param docID Document ID of the collection\r\n */\r\nexport const mapPlanet = (payload: PlanetDTO, docID: string): Planet => ({\r\n  climate: payload.fields.climate,\r\n  created: payload.fields.created,\r\n  diameter: payload.fields.diameter,\r\n  edited: payload.fields.edited,\r\n  gravity: payload.fields.gravity,\r\n  name: payload.fields.name,\r\n  orbitalPeriod: payload.fields.orbital_period,\r\n  population: payload.fields.population,\r\n  rotationPeriod: payload.fields.rotation_period,\r\n  surfaceWater: payload.fields.surface_water,\r\n  terrain: payload.fields.terrain,\r\n  pk: payload.pk,\r\n  model: payload.model,\r\n  docId: docID,\r\n  img: payload.img\r\n} as Planet);\r\n\r\n/**\r\n * Returns a person entry to display.\r\n * @param payload Data to map from DB\r\n * @param docID Document ID of the collection\r\n */\r\nexport const mapCharacter = (payload: CharacterDTO, docID: string): Character => ({\r\n  birthYear: payload.fields.birth_year,\r\n  created: payload.fields.created,\r\n  edited: payload.fields.edited,\r\n  eyeColor: payload.fields.eye_color,\r\n  gender: payload.fields.gender,\r\n  hairColor: payload.fields.hair_color,\r\n  height: payload.fields.height,\r\n  homeworld: payload.fields.homeworld,\r\n  image: payload.fields.image ?? null,\r\n  mass: payload.fields.mass,\r\n  name: payload.fields.name,\r\n  skinColor: payload.fields.skin_color,\r\n  pk: payload.pk,\r\n  model: payload.model,\r\n  docId: docID,\r\n} as Character);\r\n\r\n/**\r\n * Returns DTO to send it back to DB.\r\n * @param payload Movie's data to map.\r\n * @param indexNumber Personal key to set.\r\n */\r\nexport const movieDTOMapper = (payload: Movie, indexNumber: number): MoviesDTO => ({\r\n  fields: {\r\n    director: payload.director,\r\n    opening_crawl: payload.openingCrawl,\r\n    producer: payload.producer,\r\n    release_date: payload.releaseDate,\r\n    title: payload.title,\r\n    created: payload.created ?? new Date().toISOString(),\r\n    edited: new Date().toISOString(),\r\n    episode_id: '',\r\n    characters: payload.charactersPKs,\r\n    planets: payload.planetsPKs,\r\n    species: payload.speciesPKs ?? [],\r\n    starships: payload.starshipsPKs ?? [],\r\n    vehicles: payload.vehiclesPKs ?? [],\r\n  },\r\n  img: payload.img ?? null,\r\n  pk: indexNumber + 1,\r\n  model: '',\r\n});\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/analytics\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nexport const DBRef = firebase.firestore();\r\n\r\nexport const firebaseApp = firebase\r\n","import firebase from \"firebase/app\";\r\nimport { DBRef } from \"../firebase\";\r\n\r\n/** \r\n * API to load the whole movies' collection \r\n * @returns Collection's reference.\r\n */\r\nexport function getMoviesCollection(): firebase.firestore.CollectionReference<firebase.firestore.DocumentData> {\r\n    return DBRef.collection('films')\r\n}\r\n\r\n/**\r\n * Loads a particular movie entry\r\n * @param docID Id of the movie entry\r\n * @returns Promise with a particular document from movies' collection.\r\n */\r\nexport function getMovieItemData(docID: string): Promise<firebase.firestore.DocumentSnapshot<firebase.firestore.DocumentData>> {\r\n    return DBRef.collection('films').doc(docID).get()\r\n}\r\n\r\n/**\r\n * API to search a movie.\r\n * @param title Movie's title.\r\n * @returns Promise with a doc. \r\n */\r\nexport function searchMovieEntity(title: string): Promise<firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>> {\r\n    return DBRef.collection('films').where('fields.title', '==', title).get()\r\n}\r\n","import firebase from \"firebase/app\";\r\nimport { DBRef } from \"../firebase\";\r\n\r\n/** API to get the whole doc's collection of chars at the db */\r\nexport function getCompleteCharactersCollection(): Promise<firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>> {\r\n    return DBRef.collection('people').get()\r\n}\r\n\r\n/**\r\n * API to get partially downloaded pieces of the collection of chars in the db.\r\n * @param last Last doc's reference.\r\n * @param threshholdNumber Peak ammount of entries to get.\r\n */\r\nexport function getChunkOfCharactersCollection(last: firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>, threshholdNumber: number): Promise<firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>> {\r\n    return DBRef.collection('people')\r\n        .endAt(last)\r\n        .limit(threshholdNumber)\r\n        .get()\r\n}\r\n\r\n/**\r\n * API to get a particular item from the db.\r\n * @param docID Doc's ID.\r\n * @returns Promise with docs.\r\n */\r\nexport const getCharacterItemDoc = (docID: string): Promise<firebase.firestore.DocumentSnapshot<firebase.firestore.DocumentData>> => DBRef\r\n    .collection('people')\r\n    .doc(docID)\r\n    .get()\r\n\r\n/**\r\n * API to get 10 doc from char's collection\r\n * @param charactersPKsTen Slice of char's array.\r\n * @returns Promise with docs.\r\n */\r\nexport function getRelevantCharactersCollection(charactersPKsTen: number[]): Promise<firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>> {\r\n    return DBRef.collection('people')\r\n        .where('pk', 'in', charactersPKsTen)\r\n        .get()\r\n}","import firebase from \"firebase/app\";\r\n\r\nimport { DBRef } from '../firebase';\r\n\r\n/** Loads partial collection of planets items */\r\nexport function getCompletePlanetsCollection(): Promise<firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>> {\r\n    return DBRef\r\n        .collection('planets')\r\n        .get()\r\n}\r\n\r\n/**\r\n * Lazyloads parts of planets items and provides the destructor function\r\n * @param last Last document to restrict the batch\r\n * @param threshholdNumber General number of planets items to display\r\n */\r\nexport function getChunkOfPlanetsCollection(last: firebase.firestore.QueryDocumentSnapshot<firebase.firestore.DocumentData>, threshholdNumber: number): Promise<firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>> {\r\n    return DBRef.collection('planets')\r\n        .endAt(last)\r\n        .limit(threshholdNumber)\r\n        .get()\r\n}\r\n\r\n/**\r\n * Loads a particular planet's entry\r\n * @param docID Id of the planet's entry\r\n */\r\nexport const getPlanetItemDoc = (docID: string): Promise<firebase.firestore.DocumentSnapshot<firebase.firestore.DocumentData>> => DBRef\r\n    .collection('planets')\r\n    .doc(docID)\r\n    .get()\r\n\r\n/**\r\n * API to get 10 doc from planets collection\r\n * @param planetsPKsTen Slice of planets array.\r\n * @returns Promise with docs.\r\n */\r\nexport function getRelevantPlanetsCollection(planetsPKsTen: number[]): Promise<firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>> {\r\n    return DBRef.collection('planets')\r\n        .where('pk', 'in', planetsPKsTen)\r\n        .get()\r\n}","/* eslint-disable import/no-unresolved */\r\n/* eslint-disable import/extensions */\r\n/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { CharacterDTO } from \"../../api/dtos/CharacterDTO\";\r\nimport { mapCharacter } from \"../../api/mappers/mapper\";\r\nimport { Character } from \"../../models/character\";\r\nimport * as CharactersDataAPI from '../../api/services/load-characters-data-api'\r\nimport { RootState, CharactersStore } from \"../store-types\";\r\n\r\n/** Async function to add up entities to loaded char's collection */\r\nexport const lazyloadMoreCharacters = createAsyncThunk(\r\n    'charactersStore/llMoreChars',\r\n    async (threshholdNumber: number) => {\r\n        const querySnapshot = await CharactersDataAPI.getCompleteCharactersCollection()\r\n        const lastDocument = querySnapshot.docs[threshholdNumber]\r\n        const limitedQuerySnapshot = await CharactersDataAPI.getChunkOfCharactersCollection(lastDocument, threshholdNumber)\r\n        if (!limitedQuerySnapshot.empty) {\r\n            const characters = limitedQuerySnapshot.docs.map(character => mapCharacter(character.data() as CharacterDTO, character.id));\r\n            return characters\r\n        }\r\n    }\r\n)\r\n\r\n/** Async function to load a chosen char entry */\r\nexport const loadCharacterItem = createAsyncThunk(\r\n    'charactersStore/loadCharItem',\r\n    async (newDocId: string) => {\r\n        const doc = await CharactersDataAPI.getCharacterItemDoc(newDocId)\r\n        if (doc.exists) {\r\n            const characterItem = mapCharacter(doc.data() as CharacterDTO, doc.id)\r\n            return characterItem\r\n        }\r\n    },\r\n    {\r\n        condition: (newDocId, { getState }) => {\r\n            const { charactersStore } = getState() as RootState\r\n            const item = charactersStore.characterItem\r\n            if (item && item.docId === newDocId) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n)\r\n\r\n/** Redux slice of characters state */\r\nexport const charactersStoreReducer = createSlice({\r\n    name: 'charactersStore',\r\n    initialState: {\r\n        characters: [],\r\n        characterItem: null,\r\n        numberOfItemsDisplayCharacters: 1,\r\n        itemsToDispCharacters: 1,\r\n        isCharacterLoadingPending: true,\r\n        areCharacterEntitiesLoaded: false,\r\n        isSidebarLoading: false,\r\n    } as CharactersStore,\r\n    reducers: {\r\n        setCharacters: (state, action: PayloadAction<Character[]>) => {\r\n            state.characters = action.payload;\r\n        },\r\n        setNumberOfItemsDisplayCharacters: (state, action: PayloadAction<number>) => {\r\n            state.numberOfItemsDisplayCharacters = action.payload\r\n        },\r\n        discardCharactersItemsAmmount: (state) => {\r\n            state.itemsToDispCharacters = 1\r\n        },\r\n        addItemsToDisplayCharacters: (state) => {\r\n            state.itemsToDispCharacters += state.numberOfItemsDisplayCharacters\r\n        },\r\n    },\r\n    extraReducers: builder => {\r\n        builder\r\n            .addCase(lazyloadMoreCharacters.pending, (state) => {\r\n                state.isSidebarLoading = true\r\n            })\r\n            .addCase(lazyloadMoreCharacters.rejected, (state) => {\r\n                state.isSidebarLoading = false\r\n            })\r\n            .addCase(lazyloadMoreCharacters.fulfilled, (state, action) => {\r\n                state.isSidebarLoading = false\r\n                if (action.payload) {\r\n                    state.areCharacterEntitiesLoaded = true;\r\n                    state.characters = action.payload;\r\n                }\r\n            })\r\n            .addCase(loadCharacterItem.fulfilled, (state, action) => {\r\n                state.isCharacterLoadingPending = false\r\n                if (action.payload) {\r\n                    state.characterItem = action.payload\r\n                }\r\n            })\r\n            .addCase(loadCharacterItem.pending, (state) => {\r\n                state.isCharacterLoadingPending = true\r\n            })\r\n            .addCase(loadCharacterItem.rejected, (state) => {\r\n                state.isCharacterLoadingPending = false\r\n            })\r\n    }\r\n\r\n})\r\n\r\nexport const {\r\n    setCharacters,\r\n    setNumberOfItemsDisplayCharacters,\r\n    discardCharactersItemsAmmount,\r\n    addItemsToDisplayCharacters\r\n} = charactersStoreReducer.actions","/* eslint-disable import/no-mutable-exports */\r\n/* eslint-disable import/extensions */\r\n/* eslint-disable import/no-unresolved */\r\n/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { CharacterDTO } from \"../../api/dtos/CharacterDTO\";\r\nimport { MoviesDTO } from \"../../api/dtos/MovieDTO\";\r\nimport { PlanetDTO } from \"../../api/dtos/PlanetDTO\";\r\nimport { mapMovie, mapCharacter, mapPlanet } from \"../../api/mappers/mapper\";\r\nimport { Character } from \"../../models/character\";\r\nimport { Planet } from \"../../models/planet\";\r\nimport * as MoviesDataAPI from '../../api/services/load-movies-data-api'\r\nimport * as CharactersDataAPI from '../../api/services/load-characters-data-api'\r\nimport * as PlanetsDataAPI from '../../api/services/load-planets-data-api'\r\n\r\nimport { Movie } from \"../../models/movie\";\r\nimport { setCharacters } from \"./characters\";\r\nimport { setPlanets } from \"./planets\";\r\nimport { RootState, MoviesStore } from \"../store-types\";\r\n\r\n/** Subscription teardown function */\r\nexport let movieSidebarSnapshotTeardown: null | (() => void);\r\n\r\n/** Async function to load one movie to display */\r\nexport const loadMovieItem = createAsyncThunk(\r\n    'movies/loadMovItem',\r\n    async (docId: string) => {\r\n        const movieDoc = await MoviesDataAPI.getMovieItemData(docId)\r\n        if (movieDoc.exists) {\r\n            const movie = mapMovie(movieDoc.data() as MoviesDTO, movieDoc.id)\r\n            let relevantCharacters = null; let relevantPlanets = null;\r\n            if (movie.charactersPKs.length > 0) {\r\n                const relevantCharactersDocs = await CharactersDataAPI.getRelevantCharactersCollection(movie.charactersPKs.slice(0, 10))\r\n                relevantCharacters = relevantCharactersDocs.docs.map(character => mapCharacter(character.data() as CharacterDTO, character.id))\r\n            }\r\n            if (movie.planetsPKs.length > 0) {\r\n                const relevantPlanetsDocs = await PlanetsDataAPI.getRelevantPlanetsCollection(movie.planetsPKs.slice(0, 10))\r\n                relevantPlanets = relevantPlanetsDocs.docs.map(planet => mapPlanet(planet.data() as PlanetDTO, planet.id))\r\n            }\r\n            return { movie, relevantCharacters, relevantPlanets }\r\n        }\r\n        return null\r\n    }\r\n)\r\n\r\n/** Async function to load assigned planets and characters data to create a new entry */\r\nexport const loadDataToAddWhenCreating = createAsyncThunk(\r\n    'movies/loadDataToAdd',\r\n    async (id, thunkAPI) => {\r\n        const charactersDocs = await CharactersDataAPI.getCompleteCharactersCollection()\r\n        const planetsDocs = await PlanetsDataAPI.getCompletePlanetsCollection()\r\n        const characters = charactersDocs.docs.map(character => mapCharacter(character.data() as CharacterDTO, character.id))\r\n        const planets = planetsDocs.docs.map(planet => mapPlanet(planet.data() as PlanetDTO, planet.id))\r\n        const state = thunkAPI.getState() as RootState\r\n        if (state.charactersStore.characters.length < 1) {\r\n            thunkAPI.dispatch(setCharacters(characters))\r\n        }\r\n        if (state.planetsStore.planets.length < 1) {\r\n            thunkAPI.dispatch(setPlanets(planets))\r\n        }\r\n    }\r\n)\r\n\r\n/** Async function to add a new movie to the db */\r\nexport const addMovieEntry = createAsyncThunk(\r\n    'movies/addToDb',\r\n    async (MovieDTO: MoviesDTO) => {\r\n        const moviesCollection = await MoviesDataAPI.getMoviesCollection().get()\r\n        const moviesCollectionLastIndex = moviesCollection.docs.length\r\n        MovieDTO.pk = moviesCollectionLastIndex + 1\r\n        MoviesDataAPI.getMoviesCollection().add(MovieDTO)\r\n    }\r\n)\r\n\r\ninterface editionArgsProps { MovieDTO: MoviesDTO, docID: string }\r\n\r\n/** Async function to save edited movie to the db */\r\nexport const editMovieEntry = createAsyncThunk(\r\n    'movies/edit',\r\n    async ({ MovieDTO, docID }: editionArgsProps) => {\r\n        MoviesDataAPI.getMoviesCollection().doc(docID).update(MovieDTO)\r\n        return mapMovie(MovieDTO, docID)\r\n    }\r\n)\r\n\r\n\r\n/** Async function to delete a movie entry */\r\nexport const deleteMovieEntry = createAsyncThunk(\r\n    'movies/delete',\r\n    async (docId: string) => MoviesDataAPI.getMoviesCollection().doc(docId).delete()\r\n)\r\n\r\n/** Async function to search movie in the db */\r\nexport const searchMovieEntry = createAsyncThunk(\r\n    'movies/search',\r\n    async (title: string) => {\r\n        const movieDocs = await MoviesDataAPI.searchMovieEntity(title)\r\n        if (!movieDocs.empty) {\r\n            return `/star-wars-react/films/${movieDocs.docs[movieDocs.docs.length - 1].id}`\r\n        } \r\n            return '/star-wars-react/not-found'\r\n    }\r\n)\r\n\r\n/** Slice of state with movies */\r\nexport const moviesStoreReducer = createSlice({\r\n    name: 'moviesStore',\r\n    initialState: {\r\n        movies: [],\r\n        relevantCharacters: [],\r\n        relevantPlanets: [],\r\n        movieItem: null,\r\n        isMovieLoadingPending: true,\r\n        areEntitiesLoading: false,\r\n        isEntityBeingAdded: false,\r\n        isEntityBeingDeleted: false,\r\n        redirectLink: null,\r\n        areMovieEntitiesLoaded: false,\r\n        isDeletionConfirmationOpen: false,\r\n    } as MoviesStore,\r\n    reducers: {\r\n        setMovies: (state, action: PayloadAction<Movie[]>) => {\r\n            if (action.payload) {\r\n                state.movies = action.payload;\r\n                state.areMovieEntitiesLoaded = true;\r\n            }\r\n        },\r\n        setRelevChars: (state, action: PayloadAction<Character[] | null>) => {\r\n            state.relevantCharacters = action.payload;\r\n        },\r\n        setRelevPlanets: (state, action: PayloadAction<Planet[] | null>) => {\r\n            state.relevantPlanets = action.payload;\r\n        },\r\n        flushMovieItem: state => {\r\n            state.movieItem = null\r\n        },\r\n        setMovieLoadingPending: (state, action) => {\r\n            state.isMovieLoadingPending = action.payload\r\n        },\r\n        setDeletionModalOpen: (state) => {\r\n            state.isDeletionConfirmationOpen = true\r\n        },\r\n        setDeletionModalClose: (state) => {\r\n            state.isDeletionConfirmationOpen = false\r\n        },\r\n    },\r\n    extraReducers: builder => {\r\n        builder\r\n        .addCase(loadMovieItem.fulfilled, (state, action) => {\r\n        state.isMovieLoadingPending = false;\r\n                if (action.payload) {\r\n                    state.movieItem = action.payload.movie\r\n                    state.relevantCharacters = action.payload.relevantCharacters\r\n                    state.relevantPlanets = action.payload.relevantPlanets\r\n                }\r\n            })\r\n            .addCase(loadDataToAddWhenCreating.pending, (state) => {\r\n                state.areEntitiesLoading = true;\r\n            })\r\n            .addCase(loadDataToAddWhenCreating.fulfilled, (state) => {\r\n                state.areEntitiesLoading = false;\r\n            })\r\n            .addCase(loadDataToAddWhenCreating.rejected, (state) => {\r\n                state.areEntitiesLoading = false;\r\n            })\r\n            .addCase(addMovieEntry.pending, (state) => {\r\n                state.isEntityBeingAdded = true;\r\n            })\r\n            .addCase(addMovieEntry.fulfilled, (state) => {\r\n                state.isEntityBeingAdded = false;\r\n            })\r\n            .addCase(editMovieEntry.fulfilled, (state, action) => {\r\n                state.movieItem = action.payload\r\n            })\r\n            .addCase(deleteMovieEntry.pending, (state) => {\r\n                state.isDeletionConfirmationOpen = false\r\n                state.isEntityBeingDeleted = true\r\n            })\r\n            .addCase(deleteMovieEntry.fulfilled, (state) => {\r\n                state.movieItem = null\r\n                state.isEntityBeingDeleted = false\r\n                state.isMovieLoadingPending = true\r\n            })\r\n            .addCase(searchMovieEntry.pending, (state) => {\r\n                state.redirectLink = null\r\n            })\r\n            .addCase(searchMovieEntry.fulfilled, (state, action) => {\r\n                state.redirectLink = action.payload\r\n            })\r\n            .addCase(searchMovieEntry.rejected, (state) => {\r\n                state.redirectLink = `/star-wars-react/not-found`\r\n            })\r\n    }\r\n\r\n\r\n})\r\n\r\nexport const { \r\n    setMovies, \r\n    setRelevChars, \r\n    setRelevPlanets, \r\n    flushMovieItem, \r\n    setMovieLoadingPending, \r\n    setDeletionModalOpen, \r\n    setDeletionModalClose \r\n} = moviesStoreReducer.actions\r\n\r\n/** Async function that's getting a subscription. */\r\nexport const subscribeToMovies = createAsyncThunk(\r\n    'movies/loadMovs',\r\n    async (id, thunkAPI) => {\r\n        const moviesCollection = MoviesDataAPI.getMoviesCollection()\r\n        movieSidebarSnapshotTeardown = moviesCollection.onSnapshot(\r\n            (querySnapshot) => {\r\n                const movies = querySnapshot.docs.map(movie => mapMovie(movie.data() as MoviesDTO, movie.id))\r\n                thunkAPI.dispatch(setMovies(movies))\r\n            },\r\n            (error) => console.error(error)\r\n        )\r\n    },\r\n)","/* eslint-disable import/no-unresolved */\r\n/* eslint-disable import/extensions */\r\n/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport * as AuthAPI from '../../api/services/auth'\r\nimport { AuthStateRootState, UserCredentials } from \"../store-types\";\r\n\r\n/** User auth statuses */\r\nexport enum UserSignInStatus {\r\n    Pending = 2,\r\n    Authorised = 1,\r\n    Unauthorised = 0,\r\n}\r\n\r\n/** Reducer slice of the user's auth status states */\r\nexport const authStateReducer = createSlice({\r\n    name: 'authState',\r\n    initialState: {\r\n        isUserSignedIn: UserSignInStatus.Pending,\r\n        passwordErrorCodeMsg: null,\r\n        emailErrorCodeMsg: null,\r\n        userEmail: null,\r\n    } as AuthStateRootState,\r\n    reducers: {\r\n        signUserIn: (state) => {\r\n            state.isUserSignedIn = UserSignInStatus.Authorised\r\n        },\r\n        signUserOut: (state) => {\r\n            state.isUserSignedIn = UserSignInStatus.Unauthorised\r\n        },\r\n        setPassErrMsg: (state, action) => {\r\n            state.passwordErrorCodeMsg = action.payload\r\n        },\r\n        setEmailErrMsg: (state, action) => {\r\n            state.emailErrorCodeMsg = action.payload\r\n        },\r\n        setUserEmailString: (state, action) => {\r\n            state.userEmail = action.payload\r\n        },\r\n        flushAllErrCodes: (state) => {\r\n            state.emailErrorCodeMsg = null\r\n            state.passwordErrorCodeMsg = null\r\n            state.userEmail = null\r\n        },\r\n    },\r\n})\r\n\r\nexport const {\r\n    signUserIn,\r\n    signUserOut,\r\n    setPassErrMsg,\r\n    setEmailErrMsg,\r\n    setUserEmailString,\r\n    flushAllErrCodes\r\n} = authStateReducer.actions;\r\n\r\n/** Async function to signin a user */\r\nexport const signIn = createAsyncThunk(\r\n    'auth/signIn',\r\n    async ({ email, password }: UserCredentials, thunkAPI) => {\r\n        thunkAPI.dispatch(flushAllErrCodes())\r\n        await AuthAPI.userSignIn(email, password)\r\n            .catch((err) => {\r\n                if (err.code === 'auth/user-not-found') {\r\n                    thunkAPI.dispatch(setEmailErrMsg(err.message))\r\n                } else if (err.code === 'auth/wrong-password') {\r\n                    thunkAPI.dispatch(setPassErrMsg(err.message))\r\n                }\r\n            })\r\n    },\r\n\r\n)\r\n\r\n/** Async function to sign out a user */\r\nexport const signCurrentUserOut = createAsyncThunk(\r\n    'auth/signOut',\r\n    async (id, thunkAPI) => {\r\n        thunkAPI.dispatch(flushAllErrCodes())\r\n        await AuthAPI.userSignOut()\r\n    }\r\n)\r\n\r\n/** Async function to create a new account */\r\nexport const createUserAccount = createAsyncThunk(\r\n    'auth/create',\r\n    async ({ email, password }: UserCredentials, thunkAPI) => {\r\n        thunkAPI.dispatch(flushAllErrCodes())\r\n        await AuthAPI.createUser(email, password)\r\n            .catch(err => {\r\n                thunkAPI.dispatch(setEmailErrMsg(err.message))\r\n            })\r\n    }\r\n)","/* eslint-disable import/extensions */\r\n/* eslint-disable import/no-unresolved */\r\n/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { PlanetDTO } from \"../../api/dtos/PlanetDTO\";\r\nimport { mapPlanet } from \"../../api/mappers/mapper\";\r\nimport { Planet } from \"../../models/planet\";\r\nimport * as PlanetsDataAPI from '../../api/services/load-planets-data-api'\r\nimport { RootState, PlanetsStore } from \"../store-types\";\r\n\r\n/** Async function to lazyload more items into sidebar */\r\nexport const lazyloadMorePlanets = createAsyncThunk(\r\n    'planetsStore/llMorePlanets',\r\n    async (threshholdNumber: number) => {\r\n        const querySnapshot = await PlanetsDataAPI.getCompletePlanetsCollection()\r\n        const lastDocument = querySnapshot.docs[threshholdNumber]\r\n        const limitedQuerySnapshot = await PlanetsDataAPI.getChunkOfPlanetsCollection(lastDocument, threshholdNumber)\r\n        if (!limitedQuerySnapshot.empty) {\r\n            const planets = limitedQuerySnapshot.docs.map(planet => mapPlanet(planet.data() as PlanetDTO, planet.id));\r\n            return planets\r\n        }\r\n    }\r\n)\r\n\r\n/** Async function to load one planet information */\r\nexport const loadPlanetItem = createAsyncThunk(\r\n    'planetsStore/loadPlanetItem',\r\n    async (newDocId: string) => {\r\n        const doc = await PlanetsDataAPI.getPlanetItemDoc(newDocId)\r\n        if (doc.exists) {\r\n            const planetItem = mapPlanet(doc.data() as PlanetDTO, doc.id)\r\n            return planetItem\r\n        }\r\n    },\r\n    {\r\n        condition: (newDocId, { getState }) => {\r\n            const { planetsStore } = getState() as RootState\r\n            const item = planetsStore.planetItem\r\n            if (item && item.docId === newDocId) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n)\r\n\r\n/** Planets' reducer state */\r\nexport const planetsStoreReducer = createSlice({\r\n    name: 'planetsStore',\r\n    initialState: {\r\n        planets: [],\r\n        planetItem: null,\r\n        numberOfItemsDisplayPlanets: 1,\r\n        itemsToDispPlanets: 1,\r\n        isPlanetLoadingPending: true,\r\n        arePlanetEntitiesLoaded: false,\r\n        isSidebarLoading: false,\r\n    } as PlanetsStore,\r\n    reducers: {\r\n        setPlanets: (state, action: PayloadAction<Planet[]>) => {\r\n            state.planets = action.payload;\r\n        },\r\n        setNumberOfItemsDisplayPlanets: (state, action: PayloadAction<number>) => {\r\n            state.numberOfItemsDisplayPlanets = action.payload\r\n        },\r\n        discardPlanetsItemsAmmount: (state) => {\r\n            state.itemsToDispPlanets = 1\r\n        },\r\n        addItemsToDisplayPlanets: (state) => {\r\n            state.itemsToDispPlanets += state.numberOfItemsDisplayPlanets\r\n        },\r\n    },\r\n    extraReducers: builder => {\r\n        builder\r\n            .addCase(lazyloadMorePlanets.pending, (state) => {\r\n                state.isSidebarLoading = true\r\n            })\r\n            .addCase(lazyloadMorePlanets.rejected, (state) => {\r\n                state.isSidebarLoading = false\r\n            })\r\n            .addCase(lazyloadMorePlanets.fulfilled, (state, action) => {\r\n                state.isSidebarLoading = false\r\n                if (action.payload) {\r\n                    state.arePlanetEntitiesLoaded = true;\r\n                    state.planets = action.payload;\r\n                }\r\n            })\r\n            .addCase(loadPlanetItem.fulfilled, (state, action) => {\r\n                state.isPlanetLoadingPending = false\r\n                if (action.payload) {\r\n                    state.planetItem = action.payload\r\n                }\r\n            })\r\n            .addCase(loadPlanetItem.pending, (state) => {\r\n                state.isPlanetLoadingPending = true\r\n            })\r\n            .addCase(loadPlanetItem.rejected, (state) => {\r\n                state.isPlanetLoadingPending = false\r\n            })\r\n    }\r\n})\r\n\r\nexport const {\r\n    setPlanets,\r\n    setNumberOfItemsDisplayPlanets,\r\n    discardPlanetsItemsAmmount,\r\n    addItemsToDisplayPlanets\r\n} = planetsStoreReducer.actions;","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { useFormik } from 'formik';\r\n\r\nimport { \r\n    makeStyles, \r\n    Theme, \r\n    createStyles, \r\n    fade, \r\n    InputBase \r\n} from '@material-ui/core';\r\n\r\nimport { SearchIcon } from '@material-ui/data-grid';\r\nimport { NavbarSearchYupValScheme } from '../../models/yup-validation-schemas';\r\n\r\nimport { searchMovieEntry } from '../../store/redux-slices/movies';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        searchIcon: {\r\n            padding: theme.spacing(0, 2),\r\n            height: '100%',\r\n            position: 'absolute',\r\n            pointerEvents: 'none',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        search: {\r\n            position: 'relative',\r\n            borderRadius: theme.shape.borderRadius,\r\n            backgroundColor: fade(theme.palette.common.white, 0.15),\r\n            '&:hover': {\r\n                backgroundColor: fade(theme.palette.common.white, 0.25),\r\n            },\r\n            marginLeft: 0,\r\n            width: '100%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                marginLeft: theme.spacing(1),\r\n                width: 'auto',\r\n            },\r\n        },\r\n        inputInput: {\r\n            padding: theme.spacing(1, 1, 1, 0),\r\n            paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n            transition: theme.transitions.create('width'),\r\n            width: '100%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: '12ch',\r\n                '&:focus': {\r\n                    width: '20ch',\r\n                },\r\n            },\r\n        },\r\n        inputRoot: {\r\n            color: 'inherit',\r\n        },\r\n    }),\r\n);\r\n\r\nconst validationSchema = NavbarSearchYupValScheme;\r\n\r\n/** Little search bar that's built into navbar or sidebar. */\r\nexport const SearchBar: React.FC = () => {\r\n    const materialUIStyles = useStyles();\r\n    const dispatch = useDispatch();\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            title: '',\r\n        },\r\n        validationSchema,\r\n        onSubmit: (values) => {\r\n            dispatch(searchMovieEntry(values.title))\r\n        }\r\n    })\r\n    return (\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <div className={materialUIStyles.search}>\r\n                <div className={materialUIStyles.searchIcon}>\r\n                    <SearchIcon />\r\n                </div>\r\n                <InputBase\r\n                    classes={{\r\n                        root: materialUIStyles.inputRoot,\r\n                        input: materialUIStyles.inputInput,\r\n                    }}\r\n                    inputProps={{ 'aria-label': 'search' }}\r\n                    name=\"title\"\r\n                    onChange={formik.handleChange}\r\n                    placeholder=\"Search...\"\r\n                />\r\n            </div>\r\n        </form>\r\n    )\r\n}","import firebase from \"firebase/app\";\r\nimport { firebaseApp } from '../firebase';\r\n\r\n/**\r\n * Firebase API to create a user in the db.\r\n * @param email User's email\r\n * @param password User's password\r\n */\r\nexport const createUser = (email: string, password: string): Promise<firebase.auth.UserCredential> => firebaseApp.auth().createUserWithEmailAndPassword(email, password)\r\n\r\n/**\r\n * Signs in or doesn't a user.\r\n * @param email User's email\r\n * @param password User's password\r\n */\r\nexport const userSignIn = (email: string, password: string): Promise<firebase.auth.UserCredential> => firebaseApp\r\n  .auth()\r\n  .signInWithEmailAndPassword(email, password);\r\n\r\n/** Signing a current user out. */\r\nexport const userSignOut = (): Promise<void> => firebaseApp\r\n  .auth()\r\n  .signOut();\r\n","/* eslint-disable import/extensions */\r\n/* eslint-disable import/no-unresolved */\r\n/* eslint-disable no-param-reassign */\r\nimport { createSlice } from \"@reduxjs/toolkit\"\r\nimport { ComponentsRootState } from \"../store-types\"\r\n\r\n/** Component's theming slice of state */\r\nexport const componentsStateReducer = createSlice({\r\n    name: 'componentsState',\r\n    initialState: {\r\n        isCommonLoadingBckDropOn: false,\r\n        mode: true,\r\n    } as ComponentsRootState,\r\n    reducers: {\r\n        setCommonBackdropOn: (state) => {\r\n            state.isCommonLoadingBckDropOn = true\r\n        },\r\n        setCommonBackdropOff: (state) => {\r\n            state.isCommonLoadingBckDropOn = false\r\n        },\r\n        setThemingMode: (state, action) => {\r\n            state.mode = action.payload\r\n        }\r\n    },\r\n})\r\n\r\nexport const {\r\n    setCommonBackdropOn,\r\n    setCommonBackdropOff,\r\n    setThemingMode\r\n} = componentsStateReducer.actions;\r\n\r\n\r\n\r\n\r\n","/* eslint-disable import/no-unresolved */\r\n/* eslint-disable import/extensions */\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { Link, NavLink, useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {\r\n    makeStyles,\r\n    Theme,\r\n    createStyles\r\n} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nimport { IconButton, useMediaQuery } from '@material-ui/core';\r\nimport { MenuIcon } from '@material-ui/data-grid';\r\n\r\nimport { DrawerContext } from '../../App';\r\nimport { Logo } from '../../imgs/logo';\r\nimport { DRAWER_WIDTH } from '../../constants/sizing-constants';\r\nimport styles from './Navbar.module.css'\r\nimport { SearchBar } from '../SearchBar';\r\n\r\nimport { UserSignInStatus, signCurrentUserOut } from '../../store/redux-slices/auth';\r\nimport { setThemingMode, setCommonBackdropOn, setCommonBackdropOff } from '../../store/redux-slices/components';\r\nimport { RootState } from '../../store/store-types';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        appBar: {\r\n            transition: theme.transitions.create(['margin', 'width'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            zIndex: theme.zIndex.drawer + 1,\r\n        },\r\n        appBarShift: {\r\n            width: `calc(100% - ${DRAWER_WIDTH}px)`,\r\n            marginLeft: DRAWER_WIDTH,\r\n            transition: theme.transitions.create(['margin', 'width'], {\r\n                easing: theme.transitions.easing.easeOut,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        hide: {\r\n            display: 'none',\r\n        },\r\n    }),\r\n);\r\n\r\ntype SliderState = number | boolean\r\n\r\ninterface Props {\r\n    setDrawerState: (isOpen: boolean) => void\r\n}\r\n\r\n/** \r\n * Component that renders navbar with: films/people/planets tabs, mainlogo, searchinput and login button-link.\r\n * It also switches the sidebar open and emits the main screen shrinking.\r\n * @param setDrawerState Function to change \"open\" status of the sidebar or 'drawer'\r\n */\r\nexport const Navbar: React.FC<Props> = ({\r\n    setDrawerState\r\n}) => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch();\r\n\r\n    const [value, setValue] = useState<SliderState>(false);\r\n    const location = useLocation();\r\n\r\n    /** If not found or found something - redirect */\r\n    const redirectLink = useSelector((state: RootState) => state.moviesStore.redirectLink)\r\n\r\n    useEffect(() => {\r\n        if (redirectLink) {\r\n            history.push(redirectLink)\r\n        }\r\n    }, [redirectLink])\r\n\r\n    /** Hook that checks an url and sets the slider accordingly */\r\n    useEffect(() => {\r\n        if (location.pathname.includes('/star-wars-react/films')) {\r\n            setValue(0)\r\n            setDrawerState(true)\r\n        } else if (location.pathname.includes('/star-wars-react/people')) {\r\n            setValue(1)\r\n            setDrawerState(true)\r\n        } else if (location.pathname.includes('/star-wars-react/planets')) {\r\n            setValue(2)\r\n            setDrawerState(true)\r\n        } else {\r\n            setValue(false);\r\n            setDrawerState(false)\r\n        }\r\n    }, [location.pathname]);\r\n\r\n    /** Function that and sets the slider accordingly */\r\n    const setSliderPosition = (event: React.ChangeEvent<Record<string, never>>, newValue: number) => {\r\n        setDrawerState(true)\r\n        setValue(newValue);\r\n    };\r\n\r\n    const materialUIStyles = useStyles();\r\n\r\n    function a11yProps(index: number) {\r\n        return {\r\n            id: `simple-tab-${index}`,\r\n            'aria-controls': `simple-tabpanel-${index}`,\r\n        };\r\n    }\r\n    /** Check the authorisation status of a user */\r\n    const isUserSignedIn = useSelector((state: RootState) => state.authState.isUserSignedIn);\r\n\r\n    /** Dark or light theme toggler status */\r\n    const [toggler, setToggler] = React.useState<boolean>(true);\r\n\r\n    const changeTheme = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setToggler(event.target.checked);\r\n        dispatch(setThemingMode(event.target.checked))\r\n    };\r\n\r\n    /** Dark or light theme status */\r\n    const themingMode = useSelector((state: RootState) => state.componentsState.mode)\r\n\r\n    /** Drawer's openness context */\r\n    const { open } = useContext(DrawerContext)\r\n\r\n    const isMediaQueryMatch375 = useMediaQuery('(max-width:414px)')\r\n\r\n    /** Backdrop if open. Mobile only. */\r\n    useEffect(() => {\r\n        if (open && isMediaQueryMatch375) {\r\n            dispatch(setCommonBackdropOn())\r\n        } else {\r\n            dispatch(setCommonBackdropOff())\r\n        }\r\n    }, [open, isMediaQueryMatch375])\r\n\r\n    /** Shift or not to shift content if open */\r\n    const appbarPersistentMode = clsx(materialUIStyles.appBar, { [materialUIStyles.appBarShift]: open })\r\n    const appbarPermanentMode = clsx(materialUIStyles.appBar)\r\n\r\n    return (\r\n        <AppBar\r\n            className={isMediaQueryMatch375 ? appbarPersistentMode : appbarPermanentMode}\r\n            position=\"fixed\"\r\n        >\r\n            <Toolbar>\r\n                {\r\n                    !isMediaQueryMatch375 ?\r\n                        <Tabs aria-label=\"simple tabs\" onChange={setSliderPosition} value={value}>\r\n                            <Tab component={NavLink} label=\"Films\" to=\"/star-wars-react/films\" {...a11yProps(0)} />\r\n                            <Tab component={NavLink} label=\"Characters\" to=\"/star-wars-react/people\" {...a11yProps(1)} />\r\n                            <Tab component={NavLink} label=\"Planets\" to=\"/star-wars-react/planets\" {...a11yProps(2)} />\r\n                        </Tabs>\r\n                        :\r\n                        <IconButton\r\n                            aria-label=\"open drawer\"\r\n                            className={clsx(materialUIStyles.menuButton, open && materialUIStyles.hide)}\r\n                            color=\"inherit\"\r\n                            edge=\"start\"\r\n                            onClick={() => {\r\n                                setDrawerState(true)\r\n                            }}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                }\r\n                <Typography className={styles.title} variant=\"h6\">\r\n                    <Link className={styles.cancelLinkStyles} to=\"/star-wars-react/\"><Logo color={themingMode ? '#fff200' : '#fff'} /></Link>\r\n                </Typography>\r\n\r\n                <div>\r\n                    <Switch\r\n                        checked={toggler}\r\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                        name=\"themingToggler\"\r\n                        onChange={changeTheme}\r\n                    />\r\n                </div>\r\n                {!isMediaQueryMatch375 &&\r\n                    <>\r\n                        <SearchBar />\r\n                        {isUserSignedIn === UserSignInStatus.Authorised\r\n                            ? <Button color=\"inherit\" onClick={() => dispatch(signCurrentUserOut())}>Logout</Button>\r\n                            : <Button color=\"inherit\" onClick={() => history.push('/star-wars-react/login')}>Login</Button>\r\n                        }\r\n                    </>\r\n                }\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n","/* eslint-disable import/extensions */\r\n/* eslint-disable eslint-comments/disable-enable-pair */\r\n/* eslint-disable import/no-unresolved */\r\nimport React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    createStyles,\r\n    FormControl,\r\n    Input,\r\n    InputLabel,\r\n    ListItemText,\r\n    makeStyles,\r\n    MenuItem,\r\n    Select,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableRow,\r\n    TextField,\r\n    Theme,\r\n    useMediaQuery\r\n} from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { Movie } from '../../../../models/movie';\r\nimport { Planet } from '../../../../models/planet';\r\nimport { Character } from '../../../../models/character';\r\nimport { movieEditYupValScheme } from '../../../../models/yup-validation-schemas';\r\nimport { ITEM_HEIGHT, ITEM_PADDING_TOP } from '../../../../constants/sizing-constants';\r\nimport styles from './MovieItemEditForm.module.css'\r\n\r\nimport { movieDTOMapper } from '../../../../api/mappers/mapper';\r\nimport { editMovieEntry, loadDataToAddWhenCreating, setRelevChars, setRelevPlanets } from '../../../../store/redux-slices/movies';\r\nimport { UserSignInStatus } from '../../../../store/redux-slices/auth';\r\nimport { RootState } from '../../../../store/store-types';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n                [theme.breakpoints.down('xs')]: {\r\n                    margin: theme.spacing(0),\r\n                },\r\n            },\r\n        },\r\n        cancelButton: {\r\n            marginRight: \"10px\",\r\n        },\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            width: '100%',\r\n            [theme.breakpoints.down('xs')]: {\r\n                margin: theme.spacing(0),\r\n                minWidth: 120,\r\n                maxWidth: 180,\r\n            },\r\n        },\r\n        loseWrap: {\r\n            whiteSpace: 'normal'\r\n        },\r\n        spinnerContainer: {\r\n            width: '100%',\r\n            minHeight: \"100px\",\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n        },\r\n    }),\r\n);\r\n\r\nconst validationSchema = movieEditYupValScheme;\r\n\r\n/** Interface for that component's props */\r\ninterface EditFormProps {\r\n    /** Fields of a movie to edit */\r\n    movie: Movie;\r\n}\r\n\r\n/**\r\n * Function that returns an op. crawl without line breakages\r\n *\r\n * @param openingCrawl Text that follows before every sw movie.\r\n */\r\nfunction getRidOfLineBreaks(openingCrawl: string): string {\r\n    return openingCrawl.replace(/[\\n\\r]+/gm, ' ')\r\n}\r\n\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 100,\r\n        },\r\n    },\r\n};\r\n\r\n/** Component that renders an interface for an entry editing */\r\nexport const MovieItemEditForm: React.FC<EditFormProps> = ({ movie }) => {\r\n    const history = useHistory();\r\n    const materialUIStyles = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    /** Block of handling the editing of relevant entries of a movie */\r\n    const [characterNames, setCharacterNames] = React.useState<string[]>([]);\r\n    const [planetsNames, setPlanetsNames] = React.useState<string[]>([]);\r\n\r\n    const relevantCharacters = useSelector((state: RootState) => state.moviesStore.relevantCharacters)\r\n    const relevantPlanets = useSelector((state: RootState) => state.moviesStore.relevantPlanets)\r\n\r\n    const charsCollection = useSelector((state: RootState) => state.charactersStore.characters)\r\n    const planetsCollection = useSelector((state: RootState) => state.planetsStore.planets)\r\n\r\n    const [newRelevantCharacters, setNewRelevantCharacters] = React.useState<Character[] | null>(relevantCharacters)\r\n    const [newRelevantPlanets, setNewRelevantPlanets] = React.useState<Planet[] | null>(relevantPlanets)\r\n\r\n    useEffect(() => {\r\n        dispatch(loadDataToAddWhenCreating())\r\n    }, [])\r\n\r\n    /** Variable to check if a user's logged in */\r\n    const isUserSignedIn = useSelector((state: RootState) => state.authState.isUserSignedIn)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            title: movie.title,\r\n            producer: movie.producer,\r\n            releaseDate: movie.releaseDate,\r\n            director: movie.director,\r\n            openingCrawl: getRidOfLineBreaks(movie.openingCrawl),\r\n            charactersPKs: movie.charactersPKs,\r\n            planetsPKs: movie.planetsPKs,\r\n            created: movie.created,\r\n            edited: movie.edited,\r\n            episodeId: movie.episodeId,\r\n            speciesPKs: movie.speciesPKs,\r\n            starshipsPKs: movie.starshipsPKs,\r\n            vehiclesPKs: movie.vehiclesPKs,\r\n            pk: movie.pk,\r\n            docId: movie.docId,\r\n            img: movie.img\r\n        },\r\n        validationSchema,\r\n        onSubmit: (values: Movie) => {\r\n            const movieDTO = movieDTOMapper(values, movie.pk)\r\n            dispatch(editMovieEntry({ MovieDTO: movieDTO, docID: values.docId }))\r\n            dispatch(setRelevPlanets(newRelevantPlanets))\r\n            dispatch(setRelevChars(newRelevantCharacters))\r\n            history.goBack()\r\n        },\r\n    })\r\n\r\n    /** If a new planet or character is chosen by a user so update the state */\r\n    const handleChangeCharacters = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setCharacterNames(event.target.value as string[]);\r\n    };\r\n\r\n    /** If a new planet or character is chosen by a user so update the state */\r\n    const handleChangePlanets = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setPlanetsNames(event.target.value as string[]);\r\n    };\r\n\r\n    /** Once the colletions of entities that are assigned to a movie are loaded set their names */\r\n    useEffect(() => {\r\n        if (relevantCharacters) {\r\n            const names = relevantCharacters.map(char => char.name)\r\n            setCharacterNames(names)\r\n        }\r\n        if (relevantPlanets) {\r\n            const names = relevantPlanets.map(planet => planet.name)\r\n            setPlanetsNames(names)\r\n        }\r\n    }, [relevantCharacters, relevantPlanets])\r\n\r\n    /** Extract personal keys and names to set for a movie */\r\n    useEffect(() => {\r\n        const characters = charsCollection && charsCollection.filter((character: Character) => characterNames.find((name: string) => name === character.name))\r\n        const charactersPersonalKeys = characters.map((character: Character) => character.pk)\r\n        if (characters.length === 0) {\r\n            setNewRelevantCharacters(null)\r\n        } else {\r\n            setNewRelevantCharacters(characters)\r\n        }\r\n        formik.setFieldValue('charactersPKs', charactersPersonalKeys)\r\n    }, [characterNames, charsCollection])\r\n\r\n    /** Extract personal keys and names to set for a movie */\r\n    useEffect(() => {\r\n        const planets = planetsCollection && planetsCollection.filter((planet: Planet) => planetsNames.find((name: string) => name === planet.name))\r\n        const planetsPersonalKeys = planets.map((planet: Planet) => planet.pk)\r\n        if (planets.length === 0) {\r\n            setNewRelevantPlanets(null)\r\n        } else {\r\n            setNewRelevantPlanets(planets)\r\n        }\r\n        formik.setFieldValue('planetsPKs', planetsPersonalKeys)\r\n    }, [planetsNames, planetsCollection])\r\n\r\n    /** Media query boolean */\r\n    const isMediaQueryMatch375 = useMediaQuery('(max-width:414px)')\r\n    \r\n    return (\r\n        <>\r\n            <div className={materialUIStyles.root}>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <TableContainer component={Paper}>\r\n                        <Table size=\"medium\">\r\n                            <TableBody>\r\n                                <TableRow >\r\n                                    <TableCell align=\"left\" className={styles.tenthWidth} ><strong>Title: </strong></TableCell>\r\n                                    <TableCell>\r\n                                        <TextField error={formik.touched.title && Boolean(formik.errors.title)}\r\n                                            helperText={formik.touched.title && formik.errors.title}\r\n                                            name=\"title\"\r\n                                            onChange={formik.handleChange}\r\n                                            size={isMediaQueryMatch375 ? 'small' : 'medium'}\r\n                                            value={formik.values.title}\r\n                                            variant=\"outlined\"\r\n                                            fullWidth />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell align=\"left\" className={styles.tenthWidth} ><strong>Producer: </strong></TableCell>\r\n                                    <TableCell>\r\n                                        <TextField error={formik.touched.producer && Boolean(formik.errors.producer)}\r\n                                            helperText={formik.touched.producer && formik.errors.producer}\r\n                                            name=\"producer\"\r\n                                            onChange={formik.handleChange}\r\n                                            size={isMediaQueryMatch375 ? 'small' : 'medium'}\r\n                                            value={formik.values.producer}\r\n                                            variant=\"outlined\"\r\n                                            fullWidth />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell align=\"left\" className={styles.tenthWidth} ><strong>Release date: </strong></TableCell>\r\n                                    <TableCell>\r\n                                        <TextField error={formik.touched.releaseDate && Boolean(formik.errors.releaseDate)}\r\n                                            helperText={formik.touched.releaseDate && formik.errors.releaseDate}\r\n                                            name=\"releaseDate\"\r\n                                            onChange={formik.handleChange}\r\n                                            size={isMediaQueryMatch375 ? 'small' : 'medium'}\r\n                                            type=\"date\"\r\n                                            value={formik.values.releaseDate}\r\n                                            variant=\"outlined\"\r\n                                            fullWidth />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell align=\"left\" className={styles.tenthWidth}><strong>Director: </strong></TableCell>\r\n                                    <TableCell>\r\n                                        <TextField error={formik.touched.director && Boolean(formik.errors.director)}\r\n                                            helperText={formik.touched.director && formik.errors.director}\r\n                                            name=\"director\"\r\n                                            onChange={formik.handleChange}\r\n                                            size={isMediaQueryMatch375 ? 'small' : 'medium'}\r\n                                            value={formik.values.director}\r\n                                            variant=\"outlined\"\r\n                                            fullWidth />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell align=\"left\" className={styles.tenthWidth}><strong>Opening crawl: </strong></TableCell>\r\n                                    <TableCell>\r\n                                        <TextField error={formik.touched.openingCrawl && Boolean(formik.errors.openingCrawl)}\r\n                                            helperText={formik.touched.openingCrawl && formik.errors.openingCrawl}\r\n                                            name=\"openingCrawl\"\r\n                                            onChange={formik.handleChange} size={isMediaQueryMatch375 ? 'small' : 'medium'}\r\n                                            value={formik.values.openingCrawl}\r\n                                            variant=\"outlined\"\r\n                                            fullWidth\r\n                                            multiline />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell align=\"left\" className={styles.tenthWidth}><strong>Img link: </strong></TableCell>\r\n                                    <TableCell>\r\n                                        <TextField\r\n                                            name=\"img\"\r\n                                            onChange={formik.handleChange} size={isMediaQueryMatch375 ? 'small' : 'medium'}\r\n                                            value={formik.values.img}\r\n                                            variant=\"outlined\"\r\n                                            fullWidth\r\n                                            multiline />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell align=\"left\" className={styles.tenthWidth}><strong>Characters: </strong></TableCell>\r\n                                    <TableCell>\r\n                                        <FormControl className={materialUIStyles.formControl}>\r\n                                            <InputLabel id=\"characters\">Add or remove</InputLabel>\r\n                                            <Select\r\n                                                id=\"characters\"\r\n                                                input={<Input />}\r\n                                                labelId=\"characters\"\r\n                                                MenuProps={MenuProps}\r\n                                                onChange={handleChangeCharacters}\r\n                                                renderValue={(selected) => (selected as string[]).join(', ')}\r\n                                                value={characterNames}\r\n                                                multiple\r\n                                            >\r\n                                                {charsCollection && charsCollection.map((char) => (\r\n                                                    <MenuItem key={char.docId} value={char.name}>\r\n                                                        <Checkbox checked={characterNames.includes(char.name)} />\r\n                                                        <ListItemText primary={char.name} />\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell align=\"left\" className={styles.tenthWidth}><strong>Planets: </strong></TableCell>\r\n                                    <TableCell>\r\n                                        <FormControl className={materialUIStyles.formControl}>\r\n                                            <InputLabel id=\"planets\">Add or remove</InputLabel>\r\n                                            <Select\r\n                                                id=\"planets\"\r\n                                                input={<Input />}\r\n                                                labelId=\"planets\"\r\n                                                MenuProps={MenuProps}\r\n                                                onChange={handleChangePlanets}\r\n                                                renderValue={(selected) => (selected as string[]).join(', ')}\r\n                                                value={planetsNames}\r\n                                                multiple\r\n                                            >\r\n                                                {planetsCollection && planetsCollection.map((planet) => (\r\n                                                    <MenuItem key={planet.docId} value={planet.name}>\r\n                                                        <Checkbox checked={planetsNames.includes(planet.name)} />\r\n                                                        <ListItemText primary={planet.name} />\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n\r\n                    {isUserSignedIn === UserSignInStatus.Authorised &&\r\n                        <div className={styles.buttonContainer}>\r\n                            <Button className={materialUIStyles.cancelButton} color=\"primary\" onClick={() => history.goBack()} type=\"button\" variant=\"contained\">CANCEL</Button>\r\n                            <Button color=\"primary\" type=\"submit\" variant=\"contained\">SAVE</Button>\r\n                        </div>}\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","/* eslint-disable eslint-comments/disable-enable-pair */\r\n/* eslint-disable import/no-unresolved */\r\n/* eslint-disable import/extensions */\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport {\r\n    makeStyles,\r\n    Theme,\r\n    createStyles\r\n} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport styles from './DeletionConfirmationModal.module.css'\r\n\r\nimport { deleteMovieEntry, setDeletionModalClose } from '../../../store/redux-slices/movies';\r\nimport { RootState } from '../../../store/store-types';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        paper: {\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n    }),\r\n);\r\n\r\ninterface DelConfModProps {\r\n    /** Id of an entry to delete */\r\n    movieID: string\r\n}\r\n\r\n/** Little modal window asking if a user is really sure to delete a movie entry */\r\nexport const DeletionConfirmationModal: React.FC<DelConfModProps> = ({ movieID }: DelConfModProps) => {\r\n    const materialUIStyles = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    /** State to redirect a user if an entry is being deleted */\r\n    const isEntityBeingDeleted = useSelector((state: RootState) => state.moviesStore.isEntityBeingDeleted)\r\n\r\n    /** Variable to set opened or closed state of the modal */\r\n    const open = useSelector((state: RootState) => state.moviesStore.isDeletionConfirmationOpen);\r\n\r\n    /** Redirect if an entry is being deleted */\r\n    if (isEntityBeingDeleted) {\r\n        return <Redirect to=\"/star-wars-react/\" />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                aria-describedby=\"transition-modal-description\"\r\n                aria-labelledby=\"transition-modal-title\"\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n                className={styles.modal}\r\n                onClose={() => dispatch(setDeletionModalClose())}\r\n                open={open}\r\n                closeAfterTransition\r\n            >\r\n                <Fade in={open}>\r\n                    <div className={materialUIStyles.paper}>\r\n                        <h2 id=\"transition-modal-title\">Are you sure you want to delete this entry?</h2>\r\n                        <div className={styles.buttons}>\r\n                            <Button color=\"primary\" onClick={() => dispatch(deleteMovieEntry(movieID))} type=\"button\" variant=\"contained\">YES</Button>\r\n                            <Button color=\"primary\" onClick={() => dispatch(setDeletionModalClose())} type=\"button\" variant=\"contained\">NO</Button>\r\n                        </div>\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\n","/* eslint-disable import/no-unresolved */\r\n/* eslint-disable import/extensions */\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardActionArea,\r\n    CardMedia,\r\n    createStyles,\r\n    makeStyles,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableRow,\r\n    Theme\r\n} from '@material-ui/core';\r\n\r\nimport { Movie } from '../../../../models/movie';\r\nimport { DeletionConfirmationModal } from '../../DeletionConfirmationModal';\r\nimport styles from '../MovieItemScreen.module.css'\r\n\r\nimport { UserSignInStatus } from '../../../../store/redux-slices/auth';\r\nimport { setDeletionModalOpen } from '../../../../store/redux-slices/movies';\r\nimport { RootState } from '../../../../store/store-types';\r\n\r\ninterface Props {\r\n    movie: Movie;\r\n    relevantEntitiesBlock: JSX.Element | null;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        deleteButton: {\r\n            marginRight: '15px'\r\n        },\r\n        tableContainer: {\r\n            display: 'flex',\r\n            [theme.breakpoints.down('sm')]: {\r\n                flexDirection: 'column',\r\n                minWidth: '300px',\r\n            },\r\n        },\r\n        imgContainer: {\r\n            height: '450px',\r\n            width: '450px',\r\n            margin: '5px',\r\n            backgroundPosition: 'left',\r\n            backgroundSize: '70%',\r\n        },\r\n        card: {\r\n            width: 'auto',\r\n            maxHeight: '600px',\r\n            maxWidth: '350px',\r\n            height: 'auto',\r\n            boxShadow: 'none'\r\n        },\r\n        buttonTableCell: {\r\n            borderBottom: 'none',\r\n            [theme.breakpoints.down('sm')]: {\r\n                width: '500px'\r\n            },\r\n        },\r\n    }),\r\n);\r\n\r\n/**\r\n * Component to display a movie data.\r\n *\r\n * @param movie Movie entity object to display\r\n * @param relevantEntitiesBlock JSX Element to display relevant entities.\r\n */\r\nexport const MovieItemDisplayComponent: React.FC<Props> = ({ movie, relevantEntitiesBlock }) => {\r\n    const materialUIStyles = useStyles();\r\n    const isUserSignedIn = useSelector((state: RootState) => state.authState.isUserSignedIn)\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    /** If a user decides to edit an entry pastes an ID of an entry to edit */\r\n    function pushEditQueryToURL() {\r\n        history.push({\r\n            pathname: `/star-wars-react/films/${movie.docId}`,\r\n            search: `edit=1`,\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <DeletionConfirmationModal movieID={movie.docId} />\r\n            <div>\r\n                <TableContainer className={materialUIStyles.tableContainer} component={Paper}>\r\n                    <Card className={materialUIStyles.card}>\r\n                        <CardActionArea>\r\n                            <CardMedia\r\n                                className={materialUIStyles.imgContainer}\r\n                                image={movie.img || 'https://via.placeholder.com/728x1000?text=No+image'}\r\n                                title={movie.title}\r\n                            />\r\n                        </CardActionArea>\r\n                    </Card>\r\n                    <Table className={styles.table} size=\"medium\">\r\n                        <TableBody>\r\n                            <TableRow >\r\n                                <TableCell align=\"left\" ><strong>Title: </strong></TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <h1>{movie.title}</h1>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell align=\"left\" ><strong>Producer: </strong></TableCell>\r\n                                <TableCell align=\"center\">{movie.producer}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell align=\"left\" ><strong>Release date: </strong></TableCell>\r\n                                <TableCell align=\"center\">{movie.releaseDate}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell align=\"left\"><strong>Director: </strong></TableCell>\r\n                                <TableCell align=\"center\">{movie.director}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell align=\"left\"><strong>Opening crawl: </strong></TableCell>\r\n                                <TableCell align=\"center\">{movie.openingCrawl}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow >\r\n                                <TableCell style={{ borderBottom: 'none' }} />\r\n                                <TableCell align=\"right\" className={materialUIStyles.buttonTableCell}>\r\n                                    {isUserSignedIn === UserSignInStatus.Authorised &&\r\n                                        <div>\r\n                                            <Button\r\n                                                className={materialUIStyles.deleteButton}\r\n                                                color=\"primary\"\r\n                                                onClick={() => dispatch(setDeletionModalOpen())}\r\n                                                type=\"button\"\r\n                                                variant=\"contained\"\r\n                                            >\r\n                                                DELETE\r\n                                            </Button>\r\n                                            <Button\r\n                                                color=\"primary\"\r\n                                                onClick={() => pushEditQueryToURL()}\r\n                                                type=\"button\"\r\n                                                variant=\"contained\"\r\n                                            >\r\n                                                EDIT\r\n                                            </Button>\r\n                                        </div>\r\n                                    }\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                {relevantEntitiesBlock}\r\n            </div>\r\n        </>)\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, Redirect, useHistory, useLocation, useParams } from 'react-router-dom';\r\n\r\nimport {\r\n    Accordion,\r\n    AccordionDetails,\r\n    AccordionSummary,\r\n    Button,\r\n    CardActionArea,\r\n    CardActions,\r\n    CardContent,\r\n    CardMedia,\r\n    CircularProgress,\r\n    createStyles,\r\n    Grid,\r\n    makeStyles,\r\n    Paper,\r\n    Theme,\r\n    Typography,\r\n    Card\r\n} from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport { MovieItemEditForm } from './MovieItemEditForm'\r\nimport { Params } from '../../../models/query-params'\r\n\r\nimport { MovieItemDisplayComponent } from './MovieItemDisplayComponent';\r\nimport { UserSignInStatus } from '../../../store/redux-slices/auth';\r\nimport { loadMovieItem } from '../../../store/redux-slices/movies';\r\nimport { RootState } from '../../../store/store-types';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            minWidth: 300,\r\n            maxWidth: 600,\r\n        },\r\n        deleteButton: {\r\n            marginRight: '15px'\r\n        },\r\n        spinnerContainer: {\r\n            width: '100%',\r\n            minHeight: \"550px\",\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            [theme.breakpoints.down('sm')]: {\r\n                minWidth: '300px',\r\n            },\r\n        },\r\n        grid: {\r\n            flexGrow: 1,\r\n            backgroundColor: 'rgb(0,0,0,.05)',\r\n            borderRadius: '5px',\r\n        },\r\n        gridItem: {\r\n            [theme.breakpoints.down('sm')]: {\r\n                width: 150\r\n            },\r\n        },\r\n        media: {\r\n            height: 200,\r\n        },\r\n        jsxAccorderons: {\r\n            width: '100%',\r\n            marginTop: '15px',\r\n            [theme.breakpoints.down('sm')]: {\r\n                minWidth: '300px',\r\n            },\r\n        }\r\n    }),\r\n);\r\n\r\n/** Component that renders a chosen movie's data */\r\nexport const MovieItemScreen: React.FC = () => {\r\n    const materialUIStyles = useStyles();\r\n    const history = useHistory()\r\n    const dispatch = useDispatch();\r\n    const location = useLocation()\r\n\r\n    /** Variable to check if a user's logged in */\r\n    const isUserSignedIn = useSelector((state: RootState) => state.authState.isUserSignedIn)\r\n\r\n    /** Variable to check if there's any relevant planets */\r\n    const relevantPlanets = useSelector((state: RootState) => state.moviesStore.relevantPlanets)\r\n\r\n\r\n    /** Variable to check if there's any relevant characters */\r\n    const relevantCharacters = useSelector((state: RootState) => state.moviesStore.relevantCharacters)\r\n\r\n    const queryParam = useParams<Params>()\r\n    const queries = new URLSearchParams(location.search)\r\n\r\n    /** Query in case of a user decides to edit an entry */\r\n    const edit: string | null = queries.get('edit')\r\n\r\n    const movie = useSelector((state: RootState) => state.moviesStore.movieItem)\r\n    const isMovieLoadingPending = useSelector((state: RootState) => state.moviesStore.isMovieLoadingPending)\r\n\r\n    /** If a user got back from another tab pastes an ID of a current entry */\r\n    useEffect(() => {\r\n        if (movie && movie.docId && !queryParam.id) {\r\n            history.replace(`/star-wars-react/films/${movie.docId}`)\r\n        }\r\n        dispatch(loadMovieItem(queryParam.id))\r\n    }, [queryParam.id])\r\n\r\n    if (isMovieLoadingPending) {\r\n        return (\r\n            <>\r\n                <Paper className={materialUIStyles.spinnerContainer} >\r\n                    <CircularProgress color=\"inherit\" />\r\n                </Paper>\r\n            </>\r\n        )\r\n    }\r\n\r\n    /** if there's no movie item show nothing */\r\n    if (!movie && !isMovieLoadingPending) {\r\n        return <Redirect to=\"/star-wars-react/not-found\" />\r\n    }\r\n\r\n    /** If a user decides to see an info about a relevant character pastes a link of such */\r\n    function renderCharacInfo(charID: string) {\r\n        history.push(`/star-wars-react/people/${charID}`);\r\n    }\r\n    /** If a user decides to see an info about a relevant planet pastes a link of such */\r\n    function renderPlanetInfo(planetID: string) {\r\n        history.push(`/star-wars-react/planets/${planetID}`);\r\n    }\r\n\r\n    const relevantCharactersJSX = (\r\n        <Accordion className={materialUIStyles.jsxAccorderons}>\r\n            <AccordionSummary\r\n                aria-controls=\"panel1a-content\"\r\n                expandIcon={<ExpandMoreIcon />}\r\n                id=\"panel1a-header\"\r\n            >\r\n                <Typography align='center' variant=\"h6\" gutterBottom>LIST OF THE MOVIE CHARACTERS</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n                <Grid className={materialUIStyles.grid} spacing={2} container>\r\n                    {relevantCharacters && relevantCharacters.map(character => (\r\n                        <Grid key={character.docId} className={materialUIStyles.gridItem} onClick={() => renderCharacInfo(character.docId)} xs=\"auto\" item>\r\n                            <Card>\r\n                                <CardActionArea>\r\n                                    <CardMedia\r\n                                        className={materialUIStyles.media}\r\n                                        image={character.image || 'https://via.placeholder.com/200x300?text=No+image'}\r\n                                        title={character.name}\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography component=\"h2\" variant=\"h5\" gutterBottom>\r\n                                            {character.name}\r\n                                        </Typography>\r\n                                        <Typography color=\"textSecondary\" component=\"p\" variant=\"body2\">\r\n                                            Color of the eyes: {character.eyeColor}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                                <CardActions style={{ display: 'flex', justifyContent: 'space-around' }}>\r\n                                    <Button color=\"inherit\" size=\"small\">\r\n                                        Learn More\r\n                                    </Button>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </AccordionDetails>\r\n        </Accordion>\r\n    )\r\n\r\n    const relevantPlanetsJSX = (\r\n        <Accordion className={materialUIStyles.jsxAccorderons}>\r\n            <AccordionSummary\r\n                aria-controls=\"panel1a-content\"\r\n                expandIcon={<ExpandMoreIcon />}\r\n                id=\"panel1a-header\"\r\n            >\r\n                <Typography align='center' variant=\"h6\" gutterBottom>LIST OF THE MOVIE PLANETS</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n                <Grid className={materialUIStyles.grid} spacing={2} container>\r\n                    {relevantPlanets && relevantPlanets.map(planet => (\r\n                        <Grid key={planet.docId} className={materialUIStyles.gridItem} onClick={() => renderPlanetInfo(planet.docId)} xs=\"auto\" item>\r\n                            <Card>\r\n                                <CardActionArea>\r\n                                    <CardMedia\r\n                                        className={materialUIStyles.media}\r\n                                        image={planet.img || 'https://via.placeholder.com/200x300?text=No+image'}\r\n                                        title={planet.name}\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography component=\"h2\" variant=\"h5\" gutterBottom>\r\n                                            {planet.name}\r\n                                        </Typography>\r\n                                        <Typography color=\"textSecondary\" component=\"p\" variant=\"body2\">\r\n                                            Diameter: {planet.diameter}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                                <CardActions style={{ display: 'flex', justifyContent: 'space-around' }}>\r\n                                    <Button color=\"inherit\" size=\"small\">\r\n                                        Learn More\r\n                                    </Button>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </AccordionDetails>\r\n        </Accordion>\r\n    )\r\n\r\n    const relevantEntitiesBlock = (relevantPlanets || relevantCharacters) && (\r\n        <>\r\n            {relevantCharacters && relevantCharactersJSX}\r\n            {relevantPlanets && relevantPlanetsJSX}\r\n        </>\r\n    );\r\n\r\n    if (isUserSignedIn === UserSignInStatus.Unauthorised && edit) {\r\n        return (\r\n            <>\r\n                <h3>Only logged users can edit entries</h3>\r\n                <Link style={{ color: 'red' }} to=\"/star-wars-react/login\">Login</Link>\r\n            </>\r\n        )\r\n    }\r\n\r\n    if (edit && movie) {\r\n        return <MovieItemEditForm movie={movie} />\r\n    }\r\n    if (!edit && movie) {\r\n        return < MovieItemDisplayComponent movie={movie} relevantEntitiesBlock={relevantEntitiesBlock} />\r\n    }\r\n    return null\r\n}\r\n\r\n","import React from 'react';\r\nimport { \r\n    Backdrop, \r\n    Button, \r\n    Card, \r\n    CardActionArea, \r\n    CardActions, \r\n    CardContent, \r\n    CardMedia, \r\n    createStyles, \r\n    Fade, \r\n    makeStyles, \r\n    Modal, \r\n    Theme, \r\n    Typography, \r\n    useMediaQuery \r\n} from '@material-ui/core';\r\n\r\nimport { YellowLogo } from '../../imgs/logo';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        spacing: {\r\n            padding: theme.spacing(5)\r\n        },\r\n        media: {\r\n            height: 500,\r\n        },\r\n        modal: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        paper: {\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n            '& a': {\r\n                color: 'red'\r\n            },\r\n        },\r\n    }),\r\n);\r\n\r\n/** Welcoming default screen. Rendered while nothing is chosen yet. */\r\nexport const WelcomeScreen: React.FC = () => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const materialUIStyles = useStyles()\r\n\r\n    const handleInfoModalOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleInfoModalClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const isMediaQueryMatch375 = useMediaQuery('(max-width:414px)')\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <Modal\r\n                    aria-describedby=\"transition-modal-description\"\r\n                    aria-labelledby=\"transition-modal-title\"\r\n                    BackdropComponent={Backdrop}\r\n                    BackdropProps={{\r\n                        timeout: 500,\r\n                    }}\r\n                    className={materialUIStyles.modal}\r\n                    onClose={handleInfoModalClose}\r\n                    open={open}\r\n                    closeAfterTransition\r\n                >\r\n                    <Fade in={open}>\r\n                        <div className={materialUIStyles.paper}>\r\n                            <Typography variant=\"h4\">\r\n                                Psst...\r\n                            </Typography>\r\n                            <Typography>Hello there!</Typography>\r\n                            <Typography component=\"p\" variant=\"body2\">\r\n                                My name is <a href=\"https://t.me/GEORGIY_APRAKSIN\">George</a>😊<br />\r\n                                This app was made during my internship in <a href=\"https://www.interesnee.ru/\">INTERESNEE JS WINTER CAMP 2021</a>.\r\n                            </Typography>\r\n                            <Typography>\r\n                                Stack:\r\n                            </Typography>\r\n                                <ul>\r\n                                    <li>\r\n                                        <a href=\"https://www.typescriptlang.org/\">TypeScript</a>\r\n                                    </li>\r\n                                    <li>\r\n                                        <a href=\"https://ru.reactjs.org/\">React 17.0.2</a>\r\n                                    </li>\r\n                                    <li>\r\n                                        <a href=\"https://redux-toolkit.js.org/\">Redux-Toolkit</a>\r\n                                    </li>\r\n                                    <li>\r\n                                        <a href=\"https://material-ui.com/\">Material-UI</a>\r\n                                    </li>\r\n                                    <li>\r\n                                        <a href=\"https://firebase.google.com/docs/firestore\">Cloud Firestore</a>\r\n                                    </li>\r\n                                    <li>\r\n                                        <a href=\"https://formik.org/docs/overview\">Formik & Yup</a>\r\n                                    </li>\r\n                                </ul>\r\n                            <Typography component=\"p\" variant=\"body2\">\r\n                                My other portfolio and whatnots:\r\n                            </Typography>\r\n                                <ul>\r\n                                    <li>\r\n                                        <a href=\"https://github.com/dreamvibe1993\">Git Hub</a>\r\n                                    </li>\r\n                                    <li>\r\n                                        <a href=\"https://soundcloud.com/mister-dreamvibe\">SoundCloud</a>\r\n                                    </li>\r\n                                </ul>\r\n                            <Typography>\r\n                                <a href=\"https://ekaterinburg.hh.ru/resume/416ea42dff089785ce0039ed1f345831765647\">Hire me</a>🤩\r\n                            </Typography>\r\n                        </div>\r\n                    </Fade>\r\n                </Modal>\r\n            </div>\r\n            <Card >\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        className={materialUIStyles.media}\r\n                        image=\"https://static0.srcdn.com/wordpress/wp-content/uploads/2019/05/Star-Wars-Movies.jpg?q=50&fit=crop&w=960&h=500\"\r\n                        title=\"Welcome\"\r\n                    />\r\n                    <CardContent>\r\n                        <YellowLogo height={isMediaQueryMatch375 ? \"70%\" : \"40%\"} width={isMediaQueryMatch375 ? \"70%\" : \"40%\"} />\r\n                    </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                    <Button color=\"inherit\" onClick={handleInfoModalOpen} size=\"small\">\r\n                        About\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n        </>\r\n    )\r\n}","/* eslint-disable import/no-unresolved */\r\n/* eslint-disable import/extensions */\r\nimport React, { useContext } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { \r\n    Divider, \r\n    IconButton, \r\n    List, \r\n    ListItem, \r\n    ListItemIcon, \r\n    ListItemText, \r\n    Theme, \r\n    useMediaQuery, \r\n    useTheme \r\n} from '@material-ui/core';\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport MovieIcon from '@material-ui/icons/Movie';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nimport { SearchBar } from '../SearchBar';\r\nimport { DrawerContext } from '../../App';\r\nimport { DRAWER_WIDTH } from '../../constants/sizing-constants'\r\n\r\nimport { signCurrentUserOut, UserSignInStatus } from '../../store/redux-slices/auth';\r\nimport { RootState } from '../../store/store-types';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        drawer: {\r\n            width: DRAWER_WIDTH,\r\n            flexShrink: 0,\r\n        },\r\n        drawerHeader: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            padding: theme.spacing(0, 1),\r\n            // necessary for content to be below app bar\r\n            ...theme.mixins.toolbar,\r\n            justifyContent: 'flex-end',\r\n        },\r\n        drawerPaper: {\r\n            width: DRAWER_WIDTH,\r\n        },\r\n        activeLink: {\r\n            backgroundColor: 'rgba(0,0,0, .1)'\r\n        }\r\n    }),\r\n);\r\ninterface SidebarProps {\r\n    children: JSX.Element[] | JSX.Element;\r\n    setDrawerState: (isOpen: boolean) => void\r\n}\r\n\r\n/** \r\n * Component that renders THE sidebar. \r\n * @param children List of items to render inside.\r\n * @param setDrawerState Function to update the state of open sidebar.\r\n */\r\nexport const Sidebar: React.FC<SidebarProps> = ({ children, setDrawerState }: SidebarProps) => {\r\n    const materialUIStyles = useStyles();\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch()\r\n    const { open } = useContext(DrawerContext)\r\n    const isMediaQueryMatch375 = useMediaQuery('(max-width:414px)')\r\n    const isUserSignedIn = useSelector((state: RootState) => state.authState.isUserSignedIn)\r\n    return (\r\n        <Drawer\r\n            classes={{\r\n                paper: materialUIStyles.drawerPaper,\r\n            }}\r\n            className={materialUIStyles.drawer}\r\n            open={open}\r\n            variant=\"persistent\"\r\n        >\r\n            {isMediaQueryMatch375 ?\r\n                <>\r\n                    <div className={materialUIStyles.drawerHeader}>\r\n                        <IconButton onClick={() => {\r\n                            setDrawerState(false)\r\n                        }\r\n                        }>\r\n                            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <List>\r\n                        <ListItem activeClassName={materialUIStyles.activeLink} component={NavLink} to=\"/star-wars-react/films\" button>\r\n                            <ListItemIcon><MovieIcon /></ListItemIcon>\r\n                            <ListItemText primary='Movies' />\r\n                        </ListItem>\r\n                        <ListItem activeClassName={materialUIStyles.activeLink} component={NavLink} to=\"/star-wars-react/people\" button>\r\n                            <ListItemIcon><FaceIcon /></ListItemIcon>\r\n                            <ListItemText primary='Characters' />\r\n                        </ListItem>\r\n                        <ListItem activeClassName={materialUIStyles.activeLink} component={NavLink} to=\"/star-wars-react/planets\" button>\r\n                            <ListItemIcon><PublicIcon /></ListItemIcon>\r\n                            <ListItemText primary='Planets' />\r\n                        </ListItem>\r\n                        <Divider />\r\n                        {isUserSignedIn === UserSignInStatus.Authorised\r\n                            ?\r\n                            <ListItem button>\r\n                                <ListItemIcon><ExitToAppIcon /></ListItemIcon>\r\n                                <ListItemText onClick={() => dispatch(signCurrentUserOut())} primary='Log out'  />\r\n                            </ListItem>\r\n                            :\r\n                            <ListItem component={NavLink} to=\"/star-wars-react/login\" button> \r\n                                <ListItemIcon><AccountCircleIcon /></ListItemIcon>\r\n                                <ListItemText primary='Log in' />\r\n                            </ListItem>\r\n                        }\r\n                        <ListItem>\r\n                            <SearchBar />\r\n                        </ListItem>\r\n                    </List>\r\n                    <Divider />\r\n                </>\r\n                :\r\n                <Toolbar />\r\n            }\r\n            { children}\r\n        </Drawer >\r\n    );\r\n}\r\n","/* eslint-disable import/no-unresolved */\r\n/* eslint-disable import/extensions */\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink, useParams } from 'react-router-dom';\r\n\r\nimport {\r\n    createStyles,\r\n    Divider,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    makeStyles,\r\n} from '@material-ui/core';\r\n\r\nimport { Movie } from '../../../models/movie';\r\nimport { MovieItemScreen } from '../MovieItemScreen';\r\nimport { WelcomeScreen } from '../../WelcomeScreen';\r\nimport { Params } from '../../../models/query-params'\r\nimport { Sidebar } from '../../Sidebar';\r\nimport styles from './MoviesSidebar.module.css'\r\n\r\nimport { UserSignInStatus } from '../../../store/redux-slices/auth';\r\nimport { subscribeToMovies } from '../../../store/redux-slices/movies';\r\nimport { RootState } from '../../../store/store-types';\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        activeLink: {\r\n            backgroundColor: 'rgba(0,0,0, .1)'\r\n        }\r\n    }),\r\n);\r\n\r\ninterface Props {\r\n    setDrawerState: (isOpen: boolean) => void\r\n}\r\n\r\n/** Sidebar (or drawer) where the movie items are displayed */\r\nexport const MoviesSidebar: React.FC<Props> = ({setDrawerState}) => {\r\n    const materialUIStyles = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n    const queryParams = useParams<Params>()\r\n\r\n    /** Variable to check if there's any movies */\r\n    const movies: Movie[] = useSelector((state: RootState) => state.moviesStore.movies)\r\n\r\n    /** Variable to check if there's a movie item */\r\n    const movieItem = useSelector((state: RootState) => state.moviesStore.movieItem)\r\n\r\n    /** Variable to check if a user's logged in */\r\n    const isUserSignedIn = useSelector((state: RootState) => state.authState.isUserSignedIn)\r\n\r\n    const listItems = movies.map((movie: Movie) => (\r\n        <ListItem key={movie.docId} activeClassName={materialUIStyles.activeLink} component={NavLink} to={`/star-wars-react/films/${movie.docId}`} button>\r\n            <ListItemText primary={movie.title} />\r\n        </ListItem>\r\n    ))\r\n\r\n    /** Hook that triggers movies loading */\r\n    useEffect(() => {\r\n        dispatch(subscribeToMovies())\r\n    }, [])\r\n    \r\n    /** Show the 'create a movie' btn if a user is logged in */\r\n    const createEntryButton = (\r\n        <>\r\n            <Divider />\r\n            <ListItem component={NavLink} to=\"/star-wars-react/create-film-entry\" button divider>\r\n                <ListItemText primary=\"Create an entry\" />\r\n            </ListItem>\r\n        </>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <Sidebar setDrawerState={setDrawerState}>\r\n                <div className={styles.drawerContainer}>\r\n                    <List>\r\n                        {listItems}\r\n                        {isUserSignedIn === UserSignInStatus.Authorised && createEntryButton}\r\n                    </List>\r\n                </div>\r\n            </Sidebar>\r\n            {(movieItem || queryParams.id) ? <MovieItemScreen /> : <WelcomeScreen />}\r\n        </>\r\n    )\r\n}","/* eslint-disable import/extensions */\r\n/* eslint-disable import/no-unresolved */\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect, useHistory, useParams } from 'react-router-dom';\r\n\r\nimport {\r\n    Card,\r\n    CardActionArea,\r\n    CardMedia,\r\n    createStyles,\r\n    makeStyles,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableRow,\r\n    Theme,\r\n} from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { Params } from '../../../models/query-params'\r\n\r\nimport { loadCharacterItem } from '../../../store/redux-slices/characters';\r\nimport { RootState } from '../../../store/store-types';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        table: {\r\n            width: \"100%\",\r\n            minHeight: \"550px\",\r\n            height: \"auto\",\r\n        },\r\n        tenthWidth: {\r\n            width: \"10%\",\r\n        },\r\n        tableContainer: {\r\n            display: 'flex',\r\n            [theme.breakpoints.down('sm')]: {\r\n                flexDirection: 'column'\r\n            },\r\n        },\r\n        spinnerContainer: {\r\n            width: '100%',\r\n            minHeight: \"550px\",\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n        },\r\n        imgContainer: {\r\n            height: '450px',\r\n            width: '450px',\r\n            margin: '5px',\r\n            backgroundPosition: 'left',\r\n            backgroundSize: '70%',\r\n        },\r\n        card: {\r\n            width: 'auto',\r\n            maxHeight: '600px',\r\n            maxWidth: '350px',\r\n            height: 'auto',\r\n            boxShadow: 'none'\r\n        },\r\n    }),\r\n);\r\n\r\n/** Component that renders a chosen character's data */\r\nexport const CharacterItemScreen: React.FC = () => {\r\n    const materialUIStyles = useStyles()\r\n    const history = useHistory()\r\n    const queryParam = useParams<Params>()\r\n    const dispatch = useDispatch()\r\n\r\n    /** Variable to check if there's any person item loaded in the store */\r\n    const character = useSelector((state: RootState) => state.charactersStore.characterItem);\r\n\r\n    /**  Hook that triggers person's entry loading if there's one existing. */\r\n    useEffect(() => {\r\n        if (character && !queryParam.id) {\r\n            history.replace(`/star-wars-react/people/${character.docId}`)\r\n        }\r\n        dispatch(loadCharacterItem(queryParam.id))\r\n    }, [queryParam.id])\r\n\r\n    const isCharacterLoadingPending = useSelector((state: RootState) => state.charactersStore.isCharacterLoadingPending)\r\n\r\n    /** If no character's doc found and loading is over render 'not-found' */\r\n    if (!character && !isCharacterLoadingPending) {\r\n        return <Redirect to=\"/star-wars-react/not-found\" />\r\n    }\r\n\r\n    /** Spinner while loading */\r\n    if (isCharacterLoadingPending) {\r\n        return (\r\n            <>\r\n                <div className={materialUIStyles.spinnerContainer} >\r\n                    <CircularProgress color=\"inherit\" />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    /** If there's a match render the data */\r\n    return character && (\r\n            <TableContainer className={materialUIStyles.tableContainer} component={Paper}>\r\n                <Card className={materialUIStyles.card}>\r\n                    <CardActionArea>\r\n                        <CardMedia\r\n                            className={materialUIStyles.imgContainer}\r\n                            image={character.image || 'https://via.placeholder.com/728x1000?text=No+image'}\r\n                            title={character.name}\r\n                        />\r\n                    </CardActionArea>\r\n                </Card>\r\n                <Table className={materialUIStyles.table} size=\"medium\">\r\n                    <TableBody>\r\n                        <TableRow >\r\n                            <TableCell align=\"left\" className={materialUIStyles.tenthWidth}><strong>Name: </strong></TableCell>\r\n                            <TableCell align=\"center\"><h1>{character.name}</h1></TableCell>\r\n                        </TableRow>\r\n                        <TableRow >\r\n                            <TableCell align=\"left\" className={materialUIStyles.tenthWidth}><strong>Date of the birth: </strong></TableCell>\r\n                            <TableCell align=\"center\">{character.birthYear}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow >\r\n                            <TableCell align=\"left\" className={materialUIStyles.tenthWidth}><strong>Color of the eyes: </strong></TableCell>\r\n                            <TableCell align=\"center\">{character.eyeColor}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow >\r\n                            <TableCell align=\"left\" className={materialUIStyles.tenthWidth}><strong>Sex: </strong></TableCell>\r\n                            <TableCell align=\"center\">{character.gender}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow >\r\n                            <TableCell align=\"left\" className={materialUIStyles.tenthWidth}><strong>Hair color: </strong></TableCell>\r\n                            <TableCell align=\"center\">{character.hairColor}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow >\r\n                            <TableCell align=\"left\" className={materialUIStyles.tenthWidth}><strong>Homeworld: </strong></TableCell>\r\n                            <TableCell align=\"center\">{character.homeworld}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow >\r\n                            <TableCell align=\"left\" className={materialUIStyles.tenthWidth}><strong>Weight: </strong></TableCell>\r\n                            <TableCell align=\"center\">{character.mass}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow >\r\n                            <TableCell align=\"left\"  className={materialUIStyles.tenthWidth} style={{borderBottom: 'none'}}><strong>Skincolor: </strong></TableCell>\r\n                            <TableCell align=\"center\" style={{borderBottom: 'none'}}>{character.skinColor}</TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n    );\r\n}\r\n","/* eslint-disable import/extensions */\r\n/* eslint-disable import/no-unresolved */\r\nimport React, { useEffect, useMemo, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink, useParams } from 'react-router-dom';\r\n\r\nimport {\r\n    Backdrop,\r\n    createStyles,\r\n    List,\r\n    ListItemText,\r\n    makeStyles,\r\n    Theme,\r\n    ListItem\r\n} from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { Character } from '../../../models/character';\r\nimport { WelcomeScreen } from '../../WelcomeScreen';\r\nimport { Sidebar } from '../../Sidebar';\r\nimport { CharacterItemScreen } from '../CharacterItemScreen';\r\nimport { Params } from '../../../models/query-params'\r\nimport { NAVBAR_HEIGHT, ITEM_HEIGHT } from '../../../constants/sizing-constants';\r\n\r\nimport { addItemsToDisplayCharacters, discardCharactersItemsAmmount, lazyloadMoreCharacters, setNumberOfItemsDisplayCharacters } from '../../../store/redux-slices/characters'\r\nimport { movieSidebarSnapshotTeardown } from '../../../store/redux-slices/movies';\r\nimport { RootState } from '../../../store/store-types';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        backdrop: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            color: '#fff',\r\n            position: 'absolute'\r\n        },\r\n        activeLink: {\r\n            backgroundColor: 'rgba(0,0,0, .1)'\r\n        },\r\n        drawerContainer: {\r\n            overflow: 'auto'\r\n        }\r\n    }),\r\n);\r\n\r\ninterface Props {\r\n    setDrawerState: (isOpen: boolean) => void\r\n}\r\n\r\n/** Sidebar (or drawer) where the people items are displayed */\r\nexport const CharactersSidebar: React.FC<Props> = ({setDrawerState}) => {\r\n    const materialUIStyles = useStyles();\r\n\r\n    /** Variable to check if there's a person item */\r\n    const character = useSelector((state: RootState) => state.charactersStore.characterItem)\r\n\r\n    /** Variable to check if there's any people loaded */\r\n    const characters: Character[] = useSelector((state: RootState) => state.charactersStore.characters)\r\n    const isSidebarLoading = useSelector((state: RootState) => state.charactersStore.isSidebarLoading)\r\n    const numberOfItemsToDisplay = useSelector((state: RootState) => state.charactersStore.itemsToDispCharacters);\r\n    const queryParams = useParams<Params>();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    /** Unsubscribe from movies updates in the movie's sidebar */\r\n    useEffect(() => {\r\n        if (movieSidebarSnapshotTeardown) {\r\n            movieSidebarSnapshotTeardown()\r\n        }\r\n    }, [movieSidebarSnapshotTeardown])\r\n\r\n    const listItems = useMemo(() => characters.map((characterItem: Character) => (\r\n        <ListItem key={characterItem.docId} activeClassName={materialUIStyles.activeLink} component={NavLink} to={`/star-wars-react/people/${characterItem.docId}`} button >\r\n            <ListItemText primary={characterItem.name} />\r\n        </ListItem>\r\n    )), [characters])\r\n\r\n    /** If a window size was changed rerenders people items into the sidebar */\r\n    function getAmountOfItemsPerWindowSize() {\r\n        const ammount = Math.ceil((window.innerHeight - NAVBAR_HEIGHT) / ITEM_HEIGHT)\r\n        dispatch(setNumberOfItemsDisplayCharacters(ammount))\r\n    }\r\n\r\n    /** When the component's loaded loads first batch of people items and does so if the num of the items' changed */\r\n    useEffect(() => {\r\n        getAmountOfItemsPerWindowSize()\r\n        if (numberOfItemsToDisplay === 1) {\r\n            dispatch(addItemsToDisplayCharacters())\r\n        }\r\n        dispatch(lazyloadMoreCharacters(numberOfItemsToDisplay))\r\n    }, [numberOfItemsToDisplay])\r\n\r\n    /** Triggers recalculating of ammounts of people items to display if the size of the window's changed */\r\n    window.addEventListener('resize', () => dispatch(discardCharactersItemsAmmount()));\r\n\r\n    /** Reference to get scroll event */\r\n    const scrollRef = useRef<HTMLDivElement>(null);\r\n\r\n    /** Hook that gets a scroll event and loads more items */\r\n    useEffect(() => {\r\n        if (!scrollRef.current) {\r\n            return;\r\n        }\r\n        const divListContainer = scrollRef.current\r\n        divListContainer.addEventListener('scroll', () => {\r\n            const scrollBottom = divListContainer.scrollHeight - divListContainer.scrollTop - divListContainer.clientHeight;\r\n            if (!scrollBottom) {\r\n                dispatch(addItemsToDisplayCharacters())\r\n            }\r\n        })\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            <Sidebar setDrawerState={setDrawerState}>\r\n                <div ref={scrollRef} className={materialUIStyles.drawerContainer}>\r\n                    <List>\r\n                        {listItems}\r\n                    </List>\r\n                    <Backdrop className={materialUIStyles.backdrop} open={isSidebarLoading}>\r\n                        <CircularProgress color=\"inherit\" />\r\n                    </Backdrop>\r\n                </div>\r\n            </Sidebar>\r\n            {(queryParams.id || character) ? <CharacterItemScreen /> : <WelcomeScreen />}\r\n        </>\r\n    )\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect, useHistory, useParams } from 'react-router-dom';\r\n\r\nimport {\r\n    CircularProgress,\r\n    createStyles,\r\n    makeStyles,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableRow,\r\n} from '@material-ui/core';\r\n\r\nimport { Params } from '../../../models/query-params';\r\n\r\nimport { loadPlanetItem } from '../../../store/redux-slices/planets';\r\nimport { RootState } from '../../../store/store-types';\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        table: {\r\n            width: \"100%\",\r\n        },\r\n        tenthWidth: {\r\n            width: \"10%\",\r\n        },\r\n        spinnerContainer: {\r\n            width: '100%',\r\n            minHeight: \"550px\",\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            backgroundColor: 'white'\r\n        }\r\n    }),\r\n);\r\n\r\n/** Component that renders a chosen planet's data */\r\nexport const PlanetsItemScreen: React.FC = () => {\r\n    const history = useHistory();\r\n    const materialUIStyles = useStyles();\r\n    const queryParam = useParams<Params>();\r\n    const planet = useSelector((state: RootState) => state.planetsStore.planetItem);\r\n    const dispatch = useDispatch()\r\n\r\n     /**  Hook that triggers planet's entry loading if there's one existing. */\r\n     useEffect(() => {\r\n         if (planet && !queryParam.id) {\r\n             history.replace(`/star-wars-react/planets/${planet.docId}`)\r\n         }\r\n         dispatch(loadPlanetItem(queryParam.id))\r\n     }, [queryParam.id])\r\n \r\n     const isPlanetLoadingPending = useSelector((state: RootState) => state.planetsStore.isPlanetLoadingPending)\r\n     \r\n     /** If no planet found - redirect */\r\n     if (!planet && !isPlanetLoadingPending) {\r\n         return <Redirect to=\"/star-wars-react/not-found\" />\r\n     }\r\n     if (isPlanetLoadingPending) {\r\n         return (\r\n             <>\r\n                 <div className={materialUIStyles.spinnerContainer} >\r\n                     <CircularProgress color=\"inherit\" />\r\n                 </div>\r\n             </>\r\n         )\r\n     }\r\n     return planet && (\r\n         <>\r\n            <TableContainer component={Paper}>\r\n                <Table className={materialUIStyles.table} size=\"medium\">\r\n                    <TableBody>\r\n                        <TableRow >\r\n                            <TableCell align=\"left\" className={materialUIStyles.tenthWidth}><strong>Name: </strong></TableCell>\r\n                            <TableCell align=\"center\"><h1>{planet.name}</h1></TableCell>\r\n                        </TableRow>\r\n                        <TableRow >\r\n                            <TableCell align=\"left\" className={materialUIStyles.tenthWidth}><strong>Climate: </strong></TableCell>\r\n                            <TableCell align=\"center\">{planet.climate}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow >\r\n                            <TableCell align=\"left\" className={materialUIStyles.tenthWidth}><strong>Diameter: </strong></TableCell>\r\n                            <TableCell align=\"center\">{planet.diameter}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow >\r\n                            <TableCell align=\"left\" className={materialUIStyles.tenthWidth}><strong>Gravity: </strong></TableCell>\r\n                            <TableCell align=\"center\">{planet.gravity}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow >\r\n                            <TableCell align=\"left\" className={materialUIStyles.tenthWidth}><strong>Orbital period: </strong></TableCell>\r\n                            <TableCell align=\"center\">{planet.orbitalPeriod}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow >\r\n                            <TableCell align=\"left\" className={materialUIStyles.tenthWidth}><strong>Population: </strong></TableCell>\r\n                            <TableCell align=\"center\">{planet.population}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow >\r\n                            <TableCell align=\"left\" className={materialUIStyles.tenthWidth}><strong>Rotation period: </strong></TableCell>\r\n                            <TableCell align=\"center\">{planet.rotationPeriod}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow >\r\n                            <TableCell align=\"left\" className={materialUIStyles.tenthWidth}><strong>Surface water: </strong></TableCell>\r\n                            <TableCell align=\"center\">{planet.surfaceWater}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow >\r\n                            <TableCell align=\"left\" className={materialUIStyles.tenthWidth}><strong>Terrain: </strong></TableCell>\r\n                            <TableCell align=\"center\">{planet.terrain}</TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    );\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink, useParams } from 'react-router-dom';\r\n\r\nimport {\r\n    Backdrop,\r\n    CircularProgress,\r\n    createStyles,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    makeStyles,\r\n    Theme\r\n} from '@material-ui/core';\r\n\r\nimport { Planet } from '../../../models/planet';\r\nimport { WelcomeScreen } from '../../WelcomeScreen';\r\nimport { Sidebar } from '../../Sidebar';\r\nimport { PlanetsItemScreen } from '../PlanetsItemScreen';\r\nimport { Params } from '../../../models/query-params'\r\nimport styles from './PlanetsSidebar.module.css'\r\nimport { NAVBAR_HEIGHT, ITEM_HEIGHT } from '../../../constants/sizing-constants';\r\n\r\nimport { movieSidebarSnapshotTeardown } from '../../../store/redux-slices/movies';\r\nimport { setNumberOfItemsDisplayPlanets, addItemsToDisplayPlanets, lazyloadMorePlanets, discardPlanetsItemsAmmount } from '../../../store/redux-slices/planets';\r\nimport { RootState } from '../../../store/store-types';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        backdrop: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            color: '#fff',\r\n            position: \"absolute\"\r\n        },\r\n        activeLink: {\r\n            backgroundColor: 'rgba(0,0,0, .1)'\r\n        }\r\n    }),\r\n);\r\n\r\ninterface Props {\r\n    setDrawerState: (isOpen: boolean) => void\r\n}\r\n/** Sidebar (or a drawer) where the planets items are displayed */\r\nexport const PlanetsSidebar: React.FC<Props> = ({ setDrawerState }) => {\r\n    const materialUIStyles = useStyles();\r\n    const dispatch = useDispatch();\r\n    const queryParams = useParams<Params>();\r\n\r\n    /** Variable to check if there's a planet item */\r\n    const planet = useSelector((state: RootState) => state.planetsStore.planetItem)\r\n    /** Variable to check if there's any planets loaded */\r\n    const planets: Planet[] = useSelector((state: RootState) => state.planetsStore.planets)\r\n    const isSidebarLoading = useSelector((state: RootState) => state.planetsStore.isSidebarLoading)\r\n    const numberOfItemsToDisplay = useSelector((state: RootState) => state.planetsStore.itemsToDispPlanets);\r\n\r\n    const listItems = planets.map((planetItem: Planet) => (\r\n        <ListItem key={planetItem.docId} activeClassName={materialUIStyles.activeLink} component={NavLink} to={`/star-wars-react/planets/${planetItem.docId}`} button>\r\n            <ListItemText primary={planetItem.name} />\r\n        </ListItem>\r\n    ))\r\n\r\n    /** Unsubscribe from movie's sidebar movies observer */\r\n    useEffect(() => {\r\n        if (movieSidebarSnapshotTeardown) {\r\n            movieSidebarSnapshotTeardown()\r\n        }\r\n    }, [movieSidebarSnapshotTeardown])\r\n\r\n    /** If a window size was changed rerenders planets items into the sidebar */\r\n    function getAmountOfItemsPerWindowSize() {\r\n        const ammount = Math.ceil((window.innerHeight - NAVBAR_HEIGHT) / ITEM_HEIGHT)\r\n        dispatch(setNumberOfItemsDisplayPlanets(ammount))\r\n    }\r\n\r\n    /** When the component's loaded loads first batch of planets items and does so if the num of the items' changed */\r\n    useEffect(() => {\r\n        getAmountOfItemsPerWindowSize()\r\n        if (numberOfItemsToDisplay === 1) {\r\n            dispatch(addItemsToDisplayPlanets())\r\n        }\r\n        dispatch(lazyloadMorePlanets(numberOfItemsToDisplay))\r\n    }, [numberOfItemsToDisplay])\r\n\r\n    /** Triggers recalculating of ammounts of planets items to display if the size of the window's changed */\r\n    window.addEventListener('resize', () => dispatch(discardPlanetsItemsAmmount()));\r\n\r\n    /** Reference to get scroll event */\r\n    const scrollRef = useRef<HTMLDivElement>(null);\r\n\r\n    /** Hook that gets a scroll event and loads more items */\r\n    useEffect(() => {\r\n        if (!scrollRef.current) {\r\n            return;\r\n        }\r\n        const divListContainer = scrollRef.current\r\n        divListContainer.addEventListener('scroll', () => {\r\n            const scrollBottom = divListContainer.scrollHeight - divListContainer.scrollTop - divListContainer.clientHeight;\r\n            if (!scrollBottom) {\r\n                dispatch(addItemsToDisplayPlanets())\r\n            }\r\n        })\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            <Sidebar setDrawerState={setDrawerState}>\r\n                <div ref={scrollRef} className={styles.drawerContainer}>\r\n                    <List>\r\n                        {listItems}\r\n                    </List>\r\n                    <Backdrop className={materialUIStyles.backdrop} open={isSidebarLoading}>\r\n                        <CircularProgress color=\"inherit\" />\r\n                    </Backdrop>\r\n                </div>\r\n            </Sidebar>\r\n            <div>\r\n                {(planet || queryParams.id) ? <PlanetsItemScreen /> : <WelcomeScreen />}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","/* eslint-disable import/extensions */\r\n/* eslint-disable import/no-unresolved */\r\n/* eslint-disable react/no-unescaped-entities */\r\nimport React, { useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardActionArea,\r\n    CardActions,\r\n    CardContent,\r\n    CardMedia,\r\n    Container,\r\n    createStyles,\r\n    makeStyles,\r\n    Paper,\r\n    Theme,\r\n    Typography} from '@material-ui/core';\r\n\r\nimport { loginPageYupValScheme } from '../../models/yup-validation-schemas';\r\nimport { DRAWER_WIDTH } from '../../constants/sizing-constants';\r\n\r\nimport { signCurrentUserOut, signIn, UserSignInStatus } from '../../store/redux-slices/auth';\r\nimport { RootState } from '../../store/store-types';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        content: {\r\n            flexGrow: 1,\r\n            padding: theme.spacing(3),\r\n            transition: theme.transitions.create(['margin', 'width'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            marginLeft: 0,\r\n        },\r\n        drawerHeader: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            padding: theme.spacing(0, 1),\r\n            ...theme.mixins.toolbar,\r\n            justifyContent: 'flex-end',\r\n        },\r\n        contentShift: {\r\n            transition: theme.transitions.create(['margin', 'width'], {\r\n                easing: theme.transitions.easing.easeOut,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n            marginLeft: DRAWER_WIDTH,\r\n        },\r\n        spacing: {\r\n            margin: theme.spacing(2),\r\n        },\r\n        media: {\r\n            height: 400,\r\n        },\r\n        flexColumn: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n        },\r\n        modalAlike: {\r\n            width: '295px',\r\n            margin: '0 auto',\r\n        }\r\n    }),\r\n);\r\n\r\nconst validationSchema = loginPageYupValScheme;\r\n\r\n/** Login page interface */\r\nexport const LoginPage: React.FC = () => {\r\n    const materialUIStyles = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n        },\r\n        validationSchema,\r\n        onSubmit: (values) => {\r\n            dispatch(signIn({ email: values.email, password: values.password }))\r\n        },\r\n    });\r\n\r\n    const isUserAuthorized = useSelector((state: RootState) => state.authState.isUserSignedIn)\r\n    const userEmail = useSelector((state: RootState) => state.authState.userEmail)\r\n    const passwordErrorMessage = useSelector((state: RootState) => state.authState.passwordErrorCodeMsg)\r\n    const emailErrorMessage = useSelector((state: RootState) => state.authState.emailErrorCodeMsg)\r\n\r\n\r\n    useEffect(() => {\r\n        if (passwordErrorMessage) {\r\n            formik.setFieldError('password', passwordErrorMessage)\r\n        }\r\n        if (emailErrorMessage) {\r\n            formik.setFieldError('email', emailErrorMessage)\r\n        }\r\n    }, [passwordErrorMessage, emailErrorMessage])\r\n\r\n\r\n    /** If a user logged in show him a warm welcome */\r\n    if (isUserAuthorized === UserSignInStatus.Authorised) {\r\n        return (\r\n            <div className={materialUIStyles.modalAlike}>\r\n                <Card>\r\n                    <CardActionArea>\r\n                        <CardMedia\r\n                            className={materialUIStyles.media}\r\n                            image='https://i.pinimg.com/736x/66/51/fb/6651fbdbd1891d94bb29ba120c8d315c.jpg'\r\n                            title=\"Welcome\"\r\n                        />\r\n                        <CardContent>\r\n                            <Typography component=\"h2\" variant=\"h5\" gutterBottom>\r\n                                Welcome {userEmail}!\r\n                            </Typography>\r\n                            <Typography color=\"textSecondary\" component=\"p\" variant=\"body2\">\r\n                                We are glad to meet you.\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions style={{ display: 'flex', justifyContent: 'space-around' }}>\r\n                        <Button color=\"inherit\" onClick={() => dispatch(signCurrentUserOut())} size=\"small\">\r\n                            Log out\r\n                        </Button>\r\n                    </CardActions>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <form className={materialUIStyles.modalAlike} onSubmit={formik.handleSubmit}>\r\n                <Paper className={materialUIStyles.flexColumn}>\r\n                    <TextField\r\n                        className={materialUIStyles.spacing}\r\n                        error={formik.touched.email && Boolean(formik.errors.email)}\r\n                        helperText={formik.touched.email && formik.errors.email}\r\n                        id=\"email\"\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.email}\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                        className={materialUIStyles.spacing}\r\n                        error={formik.touched.password && Boolean(formik.errors.password)}\r\n                        helperText={formik.touched.password && formik.errors.password}\r\n                        id=\"password\"\r\n                        label=\"Password\"\r\n                        name=\"password\"\r\n                        onChange={formik.handleChange}\r\n                        type=\"password\"\r\n                        value={formik.values.password}\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <Button className={materialUIStyles.spacing} color=\"primary\" type=\"submit\" variant=\"contained\">\r\n                        Submit\r\n                    </Button>\r\n                </Paper>\r\n            <Typography color=\"textSecondary\" variant=\"subtitle1\">\r\n                Don't have an account yet? <NavLink style={{ color: \"red\" }} to=\"/star-wars-react/register\">Create an account!</NavLink>\r\n            </Typography>\r\n            </form>\r\n        </Container>\r\n    )\r\n}","/* eslint-disable eslint-comments/disable-enable-pair */\r\n/* eslint-disable import/extensions */\r\n/* eslint-disable import/no-unresolved */\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\n\r\nimport {\r\n    Button,\r\n    Chip,\r\n    CircularProgress,\r\n    createStyles,\r\n    FormControl,\r\n    Input,\r\n    InputLabel,\r\n    makeStyles,\r\n    MenuItem,\r\n    Select,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableRow,\r\n    TextField,\r\n    Theme,\r\n    useMediaQuery,\r\n    useTheme\r\n} from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { ITEM_HEIGHT, ITEM_PADDING_TOP } from '../../../constants/sizing-constants';\r\nimport { Character } from '../../../models/character';\r\nimport { Planet } from '../../../models/planet';\r\nimport styles from './CreateMovieItemScreen.module.css';\r\nimport { createMovieItemYupValScheme } from '../../../models/yup-validation-schemas';\r\nimport { Movie } from '../../../models/movie';\r\n\r\nimport { addMovieEntry, loadDataToAddWhenCreating } from '../../../store/redux-slices/movies';\r\nimport { movieDTOMapper } from '../../../api/mappers/mapper';\r\nimport { RootState } from '../../../store/store-types';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n                [theme.breakpoints.down('sm')]: {\r\n                    margin: theme.spacing(0),\r\n                },\r\n            },\r\n        },\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            width: '100%'\r\n        },\r\n        cancelButton: {\r\n            marginRight: '10px',\r\n        },\r\n        spinnerContainer: {\r\n            width: '100%',\r\n            minHeight: \"100px\",\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n        },\r\n    })\r\n);\r\n\r\nconst validationSchema = createMovieItemYupValScheme;\r\n\r\nconst initialValues: Movie = {\r\n    title: '',\r\n    producer: '',\r\n    releaseDate: '',\r\n    director: '',\r\n    openingCrawl: '',\r\n    charactersPKs: [],\r\n    planetsPKs: [],\r\n    created: '',\r\n    edited: '',\r\n    episodeId: 0,\r\n    speciesPKs: [],\r\n    starshipsPKs: [],\r\n    vehiclesPKs: [],\r\n    pk: 0,\r\n    docId: '',\r\n    img: '',\r\n}\r\n\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nfunction getStyles(name: string, characterNames: string[], theme: Theme) {\r\n    return {\r\n        fontWeight:\r\n            characterNames.indexOf(name) === -1\r\n                ? theme.typography.fontWeightRegular\r\n                : theme.typography.fontWeightMedium,\r\n    };\r\n}\r\n\r\n/** Component that provides an interface to create a movie entry */\r\nexport const CreateMovieItemScreen: React.FC = () => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n    /** Styles that are more superior than module.css */\r\n    const materialUIStyles = useStyles();\r\n    /** Characters to choose to add into a new movie entry */\r\n    const characters = useSelector((state: RootState) => state.charactersStore.characters);\r\n    /** Planets to choose to add into a new movie entry */\r\n    const planets = useSelector((state: RootState) => state.planetsStore.planets);\r\n    /** State to render a spinner if true */\r\n    const areEntitiesLoading = useSelector((state: RootState) => state.moviesStore.areEntitiesLoading)\r\n    /** State for chosen characters to be added */\r\n    const [characterNames, setCharacterNames] = React.useState<string[]>([]);\r\n    /** State for chosen planets to be added */\r\n    const [planetNames, setPlanetNames] = React.useState<string[]>([]);\r\n    /**\r\n     * Adds names of chosen characters\r\n     *\r\n     * @param event Change event of a node\r\n     */\r\n    const handleChangeCharacters = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setCharacterNames(event.target.value as string[]);\r\n    };\r\n    /**\r\n     * Adds names of chosen planets to state\r\n     *\r\n     * @param event Change event of a node\r\n     */\r\n    const handleChangePlanets = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setPlanetNames(event.target.value as string[]);\r\n    };\r\n    /** Loads Characters and Planets when first time launched */\r\n    useEffect(() => {\r\n        dispatch(loadDataToAddWhenCreating())\r\n    }, [])\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema,\r\n        onSubmit: (values) => {\r\n            dispatch(addMovieEntry({ ...movieDTOMapper(values, 0) }))\r\n        }\r\n    })\r\n\r\n    /** Refreshes personal keys array when a new character is chosen */\r\n    useEffect(() => {\r\n        const charactersCollection = characters.filter((character: Character) => characterNames.find((name: string) => name === character.name))\r\n        const charactersPersonalKeys = charactersCollection.map((character: Character) => character.pk)\r\n        formik.setFieldValue('charactersPKs', charactersPersonalKeys)\r\n    }, [characterNames])\r\n\r\n    /** Refreshes personal keys array when a new planet is chosen */\r\n    useEffect(() => {\r\n        const planetsFiltered = planets.filter((planet: Planet) => planetNames.find((name: string) => name === planet.name))\r\n        const planetsPersonalKeys = planetsFiltered.map((planet: Planet) => planet.pk)\r\n        formik.setFieldValue('planetsPKs', planetsPersonalKeys)\r\n    }, [planetNames])\r\n\r\n    const isEntityBeingAdded = useSelector((state: RootState) => state.moviesStore.isEntityBeingAdded)\r\n\r\n    const isMediaQueryMatch375 = useMediaQuery('(max-width:414px)')\r\n    \r\n    /** Redirect if a new movie entity is going to the db */\r\n    if (isEntityBeingAdded) {\r\n        return <Redirect to=\"/star-wars-react/films\" />\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div className={materialUIStyles.root}>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <TableContainer component={Paper}>\r\n                        <Table size=\"medium\">\r\n                            <TableBody>\r\n                                <TableRow >\r\n                                    <TableCell align=\"left\" className={styles.tenthWidth} ><strong>Title: </strong></TableCell>\r\n                                    <TableCell>\r\n                                        <TextField error={formik.touched.title && Boolean(formik.errors.title)}\r\n                                            helperText={formik.touched.title && formik.errors.title}\r\n                                            name=\"title\"\r\n                                            onChange={formik.handleChange}\r\n                                            size={isMediaQueryMatch375 ? 'small' : 'medium'}\r\n                                            value={formik.values.title}\r\n                                            variant=\"outlined\"\r\n                                            fullWidth\r\n                                            />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell align=\"left\" className={styles.tenthWidth} ><strong>Producer: </strong></TableCell>\r\n                                    <TableCell>\r\n                                        <TextField error={formik.touched.producer && Boolean(formik.errors.producer)}\r\n                                            helperText={formik.touched.producer && formik.errors.producer}\r\n                                            name=\"producer\"\r\n                                            onChange={formik.handleChange}\r\n                                            size={isMediaQueryMatch375 ? 'small' : 'medium'}\r\n                                            value={formik.values.producer}\r\n                                            variant=\"outlined\"\r\n                                            fullWidth\r\n                                            />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell align=\"left\" className={styles.tenthWidth} ><strong>Release date: </strong></TableCell>\r\n                                    <TableCell>\r\n                                        <TextField error={formik.touched.releaseDate && Boolean(formik.errors.releaseDate)}\r\n                                            helperText={formik.touched.releaseDate && formik.errors.releaseDate}\r\n                                            name=\"releaseDate\"\r\n                                            onChange={formik.handleChange}\r\n                                            size={isMediaQueryMatch375 ? 'small' : 'medium'}\r\n                                            type=\"date\"\r\n                                            value={formik.values.releaseDate}\r\n                                            variant=\"outlined\"\r\n                                            fullWidth\r\n                                            />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell align=\"left\" className={styles.tenthWidth}><strong>Director: </strong></TableCell>\r\n                                    <TableCell>\r\n                                        <TextField error={formik.touched.director && Boolean(formik.errors.director)}\r\n                                            helperText={formik.touched.director && formik.errors.director}\r\n                                            name=\"director\"\r\n                                            onChange={formik.handleChange}\r\n                                            size={isMediaQueryMatch375 ? 'small' : 'medium'}\r\n                                            value={formik.values.director}\r\n                                            variant=\"outlined\"\r\n                                            fullWidth\r\n                                            />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell align=\"left\" className={styles.tenthWidth}><strong>Opening crawl: </strong></TableCell>\r\n                                    <TableCell>\r\n                                        <TextField error={formik.touched.openingCrawl && Boolean(formik.errors.openingCrawl)}\r\n                                            helperText={formik.touched.openingCrawl && formik.errors.openingCrawl}\r\n                                            name=\"openingCrawl\"\r\n                                            onChange={formik.handleChange} size={isMediaQueryMatch375 ? 'small' : 'medium'}\r\n                                            value={formik.values.openingCrawl}\r\n                                            variant=\"outlined\" \r\n                                            fullWidth\r\n                                            multiline\r\n                                            />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell align=\"left\" className={styles.tenthWidth}><strong>Img link: </strong></TableCell>\r\n                                    <TableCell>\r\n                                        <TextField\r\n                                            name=\"img\"\r\n                                            onChange={formik.handleChange} size={isMediaQueryMatch375 ? 'small' : 'medium'}\r\n                                            value={formik.values.img}\r\n                                            variant=\"outlined\" \r\n                                            fullWidth\r\n                                            multiline\r\n                                            />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell align=\"left\" className={styles.tenthWidth}><strong>Relevant characters and planets: </strong></TableCell>\r\n\r\n                                    {!areEntitiesLoading ?\r\n                                        <TableCell>\r\n                                            <FormControl className={materialUIStyles.formControl} >\r\n                                                <InputLabel id=\"mutiple-chip-label\">Characters to add</InputLabel>\r\n\r\n                                                <Select\r\n                                                    id=\"select-characters-to-add\"\r\n                                                    input={<Input id=\"select-characters-to-add\" />}\r\n                                                    labelId=\"select-characters-to-add-label\"\r\n                                                    MenuProps={MenuProps}\r\n                                                    onChange={handleChangeCharacters}\r\n                                                    renderValue={(selected) => (\r\n                                                        <div className={styles.chips}>\r\n                                                            {(selected as string[]).map((value) => (\r\n                                                                <Chip key={value} className={styles.chip} label={value} />\r\n                                                            ))}\r\n                                                        </div>\r\n                                                    )}\r\n                                                    value={characterNames}\r\n                                                    multiple\r\n                                                >\r\n                                                    {characters.map((character: Character) => (\r\n                                                        <MenuItem\r\n                                                            key={character.name}\r\n                                                            style={getStyles(character.name, characterNames, theme)}\r\n                                                            value={character.name}>\r\n                                                            {character.name}\r\n                                                        </MenuItem>))}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            <FormControl className={materialUIStyles.formControl} >\r\n                                                <InputLabel id=\"mutiple-chip-label\">Planets to add</InputLabel>\r\n                                                <Select\r\n                                                    id=\"select-planets-to-add\"\r\n                                                    input={<Input id=\"select-planets-to-add\" />}\r\n                                                    labelId=\"select-planets-to-add-label\"\r\n                                                    MenuProps={MenuProps}\r\n                                                    onChange={handleChangePlanets}\r\n                                                    renderValue={(selected) => (\r\n                                                        <div className={styles.chips}>\r\n                                                            {(selected as string[]).map((value) => (\r\n                                                                <Chip key={value} className={styles.chip} label={value} />\r\n                                                            ))}\r\n                                                        </div>\r\n                                                    )}\r\n                                                    value={planetNames}\r\n                                                    multiple\r\n                                                >\r\n                                                    {planets.map((planet: Planet) => (<MenuItem key={planet.name} style={getStyles(planet.name, planetNames, theme)} value={planet.name}>\r\n                                                        {planet.name}\r\n                                                    </MenuItem>))}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        </TableCell>\r\n                                        :\r\n                                        <TableCell className={materialUIStyles.spinnerContainer}>\r\n                                            <CircularProgress />\r\n                                        </TableCell>\r\n                                    }\r\n                                </TableRow>\r\n                                <TableRow />\r\n                                <TableRow >\r\n                                    <TableCell align=\"left\" />\r\n                                    <TableCell align=\"right\">\r\n                                            <Link className={styles.link} to=\"/star-wars-react/films\">\r\n                                                <Button\r\n                                                    className={materialUIStyles.cancelButton}\r\n                                                    color=\"primary\"\r\n                                                    type=\"button\"\r\n                                                    variant=\"contained\">\r\n                                                    CANCEL\r\n                                            </Button>\r\n                                            </Link>\r\n                                            <Button\r\n                                                color=\"primary\"\r\n                                                type=\"submit\"\r\n                                                variant=\"contained\">\r\n                                                SAVE\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    Card,\r\n    CardActionArea,\r\n    CardContent,\r\n    CardMedia,\r\n    createStyles,\r\n    makeStyles,\r\n    Theme,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nimport { setMovieLoadingPending } from '../../store/redux-slices/movies';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        spacing: {\r\n            padding: theme.spacing(5)\r\n        },\r\n        media: {\r\n            height: 600,\r\n        }\r\n    }),\r\n);\r\n\r\n/** Component that renders only if no entry is found */\r\nexport const NotFoundScreen: React.FC = () => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(setMovieLoadingPending(true))\r\n    }, [])\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image='https://img1.looper.com/img/gallery/the-saddest-star-wars-moments-ever/intro-1584389780.jpg'\r\n                        title=\"BOOOOHOOOOOOOOO!!!!!!! :*O\"\r\n                    />\r\n                    <CardContent>\r\n                        <Typography variant=\"h2\" gutterBottom>\r\n                            404!\r\n                            </Typography>\r\n                        <Typography color=\"textSecondary\" component=\"p\" variant=\"body2\">\r\n                            Should we try again?\r\n                            </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n","/* eslint-disable import/no-unresolved */\r\n/* eslint-disable import/extensions */\r\nimport React, { useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\n\r\nimport { \r\n    makeStyles, \r\n    Theme, \r\n    createStyles, \r\n    Paper, \r\n    TextField, \r\n    Button, \r\n    Typography \r\n} from '@material-ui/core';\r\n\r\nimport { DRAWER_WIDTH } from '../../constants/sizing-constants';\r\nimport styles from './RegistrationPage.module.css'\r\nimport { accCreateYupValScheme } from '../../models/yup-validation-schemas';\r\n\r\nimport { createUserAccount, UserSignInStatus } from '../../store/redux-slices/auth';\r\nimport { RootState } from '../../store/store-types';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        content: {\r\n            flexGrow: 1,\r\n            padding: theme.spacing(3),\r\n            transition: theme.transitions.create(['margin', 'width'], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            marginLeft: 0,\r\n        },\r\n        drawerHeader: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            padding: theme.spacing(0, 1),\r\n            ...theme.mixins.toolbar,\r\n            justifyContent: 'flex-end',\r\n        },\r\n        contentShift: {\r\n            transition: theme.transitions.create(['margin', 'width'], {\r\n                easing: theme.transitions.easing.easeOut,\r\n                duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n            marginLeft: DRAWER_WIDTH,\r\n        },\r\n        spacing: {\r\n            margin: theme.spacing(2),\r\n        },\r\n        media: {\r\n            height: 400,\r\n        },\r\n        modalAlike: {\r\n            width: '330px',\r\n            margin: '0 auto',\r\n        }\r\n    }),\r\n);\r\n\r\nconst validationSchema = accCreateYupValScheme;\r\n\r\n/** Component rendering registration's form */\r\nexport const RegistrationPage: React.FC = () => {\r\n    const materialUIStyles = useStyles();\r\n    const dispatch = useDispatch();\r\n    const isUserAuthorized = useSelector((state: RootState) => state.authState.isUserSignedIn)\r\n    const emailErrorMessage = useSelector((state: RootState) => state.authState.emailErrorCodeMsg)\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            repeatPassword: '',\r\n        },\r\n        validationSchema,\r\n        onSubmit: (values) => {\r\n            if (values.password !== values.repeatPassword) {\r\n                formik.setFieldError('password', 'Passwords don\\'t match!')\r\n            } else {\r\n                dispatch(createUserAccount({ email: values.email, password: values.password }))\r\n            }\r\n        },\r\n    });\r\n\r\n    /** If there was error set an error */\r\n    useEffect(() => {\r\n        if (emailErrorMessage) {\r\n            formik.setFieldError('email', emailErrorMessage)\r\n        }\r\n    }, [emailErrorMessage])\r\n    \r\n    /** If user logged in - redirect */\r\n    if (isUserAuthorized === UserSignInStatus.Authorised) {\r\n        return <Redirect to=\"/star-wars-react/login\" />\r\n    }\r\n    return (\r\n        <form className={materialUIStyles.modalAlike} onSubmit={formik.handleSubmit}>\r\n            <Paper className={styles.flexColumn}>\r\n                <Typography component=\"h2\" style={{ marginTop: '15px' }} variant=\"h4\">Create an account</Typography>\r\n                <TextField\r\n                    className={materialUIStyles.spacing}\r\n                    error={formik.touched.email && Boolean(formik.errors.email)}\r\n                    helperText={formik.touched.email && formik.errors.email}\r\n                    id=\"email\"\r\n                    label=\"Type your email\"\r\n                    name=\"email\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.email}\r\n                    variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                    className={materialUIStyles.spacing}\r\n                    error={formik.touched.password && Boolean(formik.errors.password)}\r\n                    helperText={formik.touched.password && formik.errors.password}\r\n                    id=\"password\"\r\n                    label=\"Type your password\"\r\n                    name=\"password\"\r\n                    onChange={formik.handleChange}\r\n                    type=\"password\"\r\n                    value={formik.values.password}\r\n                    variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                    className={materialUIStyles.spacing}\r\n                    error={formik.touched.repeatPassword && Boolean(formik.errors.repeatPassword)}\r\n                    helperText={formik.touched.repeatPassword && formik.errors.repeatPassword}\r\n                    id=\"repeatPassword\"\r\n                    label=\"Repeat your password\"\r\n                    name=\"repeatPassword\"\r\n                    onChange={formik.handleChange}\r\n                    type=\"password\"\r\n                    value={formik.values.repeatPassword}\r\n                    variant=\"outlined\"\r\n                />\r\n                <Button className={materialUIStyles.spacing} color=\"primary\" type=\"submit\" variant=\"contained\">\r\n                    Submit\r\n                </Button>\r\n            </Paper>\r\n            <Typography color=\"textSecondary\" variant=\"subtitle1\">\r\n                Already have an account? <NavLink style={{ color: \"red\" }} to=\"/star-wars-react/login\">Log in!</NavLink>\r\n            </Typography>\r\n        </form>\r\n    )\r\n}","/* eslint-disable import/no-unresolved */\r\n/* eslint-disable import/extensions */\r\n/* eslint-disable import/no-default-export */\r\nimport React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { Redirect, Route, Switch, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { Backdrop, CssBaseline, createMuiTheme, ThemeProvider, useMediaQuery } from '@material-ui/core';\r\n\r\nimport './App.css';\r\nimport { Navbar } from './components/Navbar/Navbar';\r\nimport { MoviesSidebar } from './components/Movies/MoviesSidebar';\r\nimport { CharactersSidebar } from './components/Characters/CharactersSidebar';\r\nimport { PlanetsSidebar } from './components/Planets/PlanetsSidebar';\r\nimport { WelcomeScreen } from './components/WelcomeScreen';\r\nimport { LoginPage } from './components/LoginPage';\r\nimport { CreateMovieItemScreen } from './components/Movies/CreateMovieItemScreen';\r\nimport { NotFoundScreen } from './components/NotFoundScreen';\r\nimport { DRAWER_WIDTH } from './constants/sizing-constants';\r\n\r\nimport { RegistrationPage } from './components/RegistrationPage';\r\nimport { Sidebar } from './components/Sidebar';\r\nimport { UserSignInStatus } from './store/redux-slices/auth';\r\n\r\nimport { getSignInStatus } from '.';\r\nimport { RootState } from './store/store-types';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      marginLeft: 0,\r\n    },\r\n    drawerHeader: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      padding: theme.spacing(0, 1),\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: 'flex-end',\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: DRAWER_WIDTH,\r\n    },\r\n    backdrop: {\r\n      zIndex: theme.zIndex.drawer - 1,\r\n      color: '#fff',\r\n      overflow: 'hidden'\r\n    },\r\n  })\r\n);\r\n\r\n/** Sidebar state to dispatch to context */\r\nconst defaultDrawerContext = {\r\n  open: false,\r\n}\r\n\r\nexport const DrawerContext = React.createContext(defaultDrawerContext);\r\n\r\n/** Main app's component */\r\nexport default function App(): JSX.Element {\r\n\r\n  const materialUIStyles = useStyles();\r\n  const isUserSignedIn = useSelector((state: RootState) => state.authState.isUserSignedIn)\r\n  const isCommonLoadingBackDropOn = useSelector((state: RootState) => state.componentsState.isCommonLoadingBckDropOn)\r\n  const dispatch = useDispatch()\r\n\r\n  /** Drawer (=== Sidebar) state context block */\r\n  const [drawerContextValue, setDrawerContext] = useState(defaultDrawerContext)\r\n  /** \r\n   * Function to change the state of the drawer openness \r\n   * It's passed into Navbar component where it's getting it's state (boolean: open or close)\r\n   */\r\n  const changeDrawerState = (isOpen: boolean): void => {\r\n    setDrawerContext({ open: isOpen })\r\n  }\r\n  /** \r\n   * Getting the status out of the changed context \r\n   * It's passed into <main />'s \"open\" attribute\r\n   */\r\n  const { open } = drawerContextValue;\r\n\r\n  useEffect(() => getSignInStatus(), [])\r\n\r\n  const themingMode = useSelector((state: RootState) => state.componentsState.mode)\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: themingMode ? 'dark' : 'light',\r\n      primary: {\r\n        light: themingMode ? '#484848' : '#757ce8',\r\n        main: themingMode ? '#212121' : '#3f50b5',\r\n        dark: themingMode ? '#000000' : '#002884',\r\n        contrastText: '#fff'\r\n      },\r\n      secondary: {\r\n        light: '#ff7961',\r\n        main: '#f44336',\r\n        dark: '#ba000d',\r\n        contrastText: '#000',\r\n      },\r\n    },\r\n  });\r\n\r\n  /** Mobile's sidebar setting's block */\r\n  const areMoviesLoaded = useSelector((state: RootState) => state.moviesStore.areMovieEntitiesLoaded)\r\n  const areCharactersLoaded = useSelector((state: RootState) => state.charactersStore.areCharacterEntitiesLoaded)\r\n  const arePlanetsLoaded = useSelector((state: RootState) => state.planetsStore.arePlanetEntitiesLoaded)\r\n\r\n  /** Giving an allowance to render empty sidebar if conditions below are fulfilled */\r\n  const location = useLocation()\r\n  const addresses = ['/star-wars-react/create-film-entry', 'edit=1', '/star-wars-react/login', '/star-wars-react/register', '/star-wars-react/', '/star-wars-react/not-found']\r\n  const checkAddress = (): boolean => addresses.includes(location.pathname)\r\n  const checkStatus = (): boolean => {\r\n    if (!(areMoviesLoaded || areCharactersLoaded || arePlanetsLoaded)) {\r\n      return checkAddress()\r\n    }\r\n    return true\r\n  }\r\n  const [isCanShowMobileSidebar, setMobileSidebarStatus] = useState<boolean>(checkStatus())\r\n  useEffect(() => {\r\n    setMobileSidebarStatus(checkStatus())\r\n  }, [areMoviesLoaded, areCharactersLoaded, arePlanetsLoaded, location.pathname])\r\n\r\n  const isMediaQueryMatch375 = useMediaQuery('(max-width:414px)')\r\n\r\n  const { Pending, Authorised } = UserSignInStatus\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline>\r\n          <DrawerContext.Provider value={drawerContextValue}>\r\n            <Navbar setDrawerState={changeDrawerState} />\r\n            <main\r\n              className={clsx(materialUIStyles.content, {\r\n                [materialUIStyles.contentShift]: open,\r\n              })}\r\n            >\r\n              {(isMediaQueryMatch375 && isCanShowMobileSidebar) && <Sidebar setDrawerState={changeDrawerState}><div /></Sidebar>}\r\n              <div className={materialUIStyles.drawerHeader} />\r\n              <React.Fragment>\r\n                <Switch>\r\n                  <Route path=\"/star-wars-react/\" exact>\r\n                    <WelcomeScreen />\r\n                  </Route>\r\n                  <Route path=\"/star-wars-react/films/:id?\">\r\n                    <MoviesSidebar setDrawerState={changeDrawerState} />\r\n                  </Route>\r\n                  <Route path=\"/star-wars-react/people/:id?\">\r\n                    <CharactersSidebar setDrawerState={changeDrawerState} />\r\n                  </Route>\r\n                  <Route path=\"/star-wars-react/planets/:id?\">\r\n                    <PlanetsSidebar setDrawerState={changeDrawerState} />\r\n                  </Route>\r\n                  <Route path=\"/star-wars-react/login\">\r\n                    <LoginPage />\r\n                  </Route>\r\n                  <Route path=\"/star-wars-react/create-film-entry\">\r\n                    {isUserSignedIn !== Pending && (isUserSignedIn === Authorised ? <CreateMovieItemScreen /> : <Redirect to=\"/star-wars-react/login\" />)}\r\n                  </Route>\r\n                  <Route path=\"/star-wars-react/not-found\">\r\n                    <NotFoundScreen />\r\n                  </Route>\r\n                  <Route path=\"/star-wars-react/register\">\r\n                    <RegistrationPage />\r\n                  </Route>\r\n                  <Route path=\"*\">\r\n                    <Redirect to=\"/star-wars-react/not-found\" />\r\n                  </Route>\r\n                </Switch>\r\n              </React.Fragment>\r\n            </main>\r\n          </DrawerContext.Provider>\r\n          <Backdrop className={materialUIStyles.backdrop} onClick={() => changeDrawerState(false)} open={isCommonLoadingBackDropOn}/>\r\n        </CssBaseline>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport {\r\n    createStyles,\r\n    makeStyles,\r\n    Paper,\r\n    Theme,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        spacing: {\r\n            padding: theme.spacing(5)\r\n        }\r\n    }),\r\n);\r\ninterface Props {\r\n    error: Error;\r\n}\r\n/** Screen to be shown if there was any error caught */\r\nexport const ErrorScreen: React.FC<Props> = ({ error }) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <>\r\n            <Paper className={classes.spacing}>\r\n                <Typography component=\"h2\" variant=\"h3\" gutterBottom>Sorry, something went wrong!</Typography>\r\n                <Typography variant=\"body1\" gutterBottom>\r\n                    Error message:\r\n                </Typography>\r\n                <hr />\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    \"{error.message}\"\r\n                </Typography>\r\n                <hr />\r\n                <Typography variant=\"body1\" gutterBottom>\r\n                    Please, <a href=\"https://t.me/GEORGIY_APRAKSIN\">contact me</a> and cite the message above.\r\n                </Typography>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    Thank You!\r\n                </Typography>\r\n            </Paper>\r\n        </>\r\n    )\r\n}","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport { authStateReducer } from \"./redux-slices/auth\";\r\nimport { charactersStoreReducer } from \"./redux-slices/characters\";\r\nimport { componentsStateReducer } from \"./redux-slices/components\";\r\nimport { moviesStoreReducer } from \"./redux-slices/movies\";\r\nimport { planetsStoreReducer } from \"./redux-slices/planets\";\r\n\r\nexport const reducer = combineReducers({\r\n    componentsState: componentsStateReducer.reducer,\r\n    moviesStore: moviesStoreReducer.reducer,\r\n    planetsStore: planetsStoreReducer.reducer,\r\n    charactersStore: charactersStoreReducer.reducer,\r\n    authState: authStateReducer.reducer,\r\n  })\r\n \r\nconst store = configureStore({ reducer });\r\n// eslint-disable-next-line import/no-default-export\r\nexport default store\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { ErrorBoundary, FallbackProps } from 'react-error-boundary';\r\nimport firebase from \"firebase/app\";\r\n\r\nimport App from './App';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ErrorScreen } from './components/ErrorScreen';\r\nimport { firebaseApp } from './api/firebase';\r\nimport store from './store/store';\r\n\r\nimport { signUserIn, setUserEmailString, signUserOut } from './store/redux-slices/auth';\r\n\r\n\r\n/** Sidebar state to dispatch to context */\r\nconst sidebar = {\r\n  open: false,\r\n  toggleOpen() { this.open = true },\r\n  toggleClose() { this.open = false },\r\n}\r\n\r\n/** Error handling function */\r\nfunction ErrorFallback({ error, resetErrorBoundary }: FallbackProps) {\r\n  return (\r\n    <ErrorScreen error={error} />\r\n  )\r\n}\r\n\r\n/** Checking if user is signed in or out. */\r\nexport const getSignInStatus = (): firebase.Unsubscribe => firebaseApp.auth().onAuthStateChanged((user) => {\r\n  // the observer is only triggered on sign-in or sign-out.\r\n  if (user) {\r\n    store.dispatch(signUserIn());\r\n    store.dispatch(setUserEmailString(user.email))\r\n  } else {\r\n    store.dispatch(signUserOut());\r\n    store.dispatch(setUserEmailString(null))\r\n  }\r\n})\r\n\r\n\r\nexport const isDrawerOpen = React.createContext(sidebar);\r\nReactDOM.render(\r\n  <ErrorBoundary FallbackComponent={ErrorFallback}>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </ErrorBoundary>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tenthWidth\":\"CreateMovieItemScreen_tenthWidth__2oknP\",\"link\":\"CreateMovieItemScreen_link__2aUY4\",\"chips\":\"CreateMovieItemScreen_chips__39W7I\",\"chip\":\"CreateMovieItemScreen_chip__362sy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tenthWidth\":\"MovieItemEditForm_tenthWidth__3ecgd\",\"buttonContainer\":\"MovieItemEditForm_buttonContainer__3IN-k\",\"link\":\"MovieItemEditForm_link__3BitA\"};"],"sourceRoot":""}